{
	"id": "9f900248-50ea-d8dd-92ab-9877a3cfb6e4",
	"name": "Kafka Provider",
	"description": "",
	"order": [
		"dc9878a1-9d72-2e75-59c3-bae16712397a",
		"848e3d75-5615-40dc-ff55-e4fee2d873a6",
		"7f8ebc78-c93c-4af3-d7f8-3e8814b0ad58",
		"d596c60f-034b-9754-90e8-6b41a1ff923e",
		"7f5f1a19-0dd2-1dc8-01bd-603d1e60a787",
		"f985566e-5986-31c5-c078-e2a7f9f3dbfd",
		"247cdd04-828d-fe1d-b4bb-099e9f999e7d",
		"d3d8a3b2-f3c8-929f-5b45-dd32a05780e9",
		"8ea2c673-348e-1db6-7d4a-a8f2dfceb2a6",
		"ba7c0b49-2117-151e-c350-72c69a53713d",
		"e7583b10-4185-2053-1fb0-32218faee99d",
		"bfe0d416-2dde-5f40-6c4c-de69bd060fd1",
		"d4b05dab-35bd-7aa5-bff2-26b7c2458902",
		"607dc1b3-a2f1-7c1d-19f1-db43824c7bf9",
		"c0ce6c4e-843f-fb5f-8713-d8229171b4db",
		"762fda5d-6c2e-bcfc-6d01-436b24b9c942",
		"fffb7663-e915-8a27-3b02-ad486bd9f2b7",
		"05627060-80c1-e873-698a-ea97e054bd5b",
		"e05a131d-05af-c8d0-7692-0ed42789b901",
		"b8e70f70-2706-2c9c-96ab-9b82c79538f9",
		"8ad3f8f5-e51d-c47a-ed43-d50f734dcc51",
		"ecb3636e-33f7-dfe9-2f5a-8cdc1e42b84e",
		"d1cdb2d9-8ce5-7522-1847-ac4f2d040012",
		"32a768d0-81c9-bbfb-5ca8-5a7bf5f14efc",
		"99b34ff7-16ca-41d2-446e-bf97f9931785",
		"754c3097-fe68-80e3-c29d-2b696a633b44"
	],
	"folders": [],
	"timestamp": 1479450537778,
	"owner": 0,
	"public": false,
	"hasRequests": true,
	"requests": [
		{
			"id": "05627060-80c1-e873-698a-ea97e054bd5b",
			"headers": "",
			"url": "{{address}}/v1/providers/",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "GET",
			"collectionId": "9f900248-50ea-d8dd-92ab-9877a3cfb6e4",
			"data": [],
			"dataMode": "raw",
			"name": "Provider_1.1.Get_list_of_all_providers",
			"description": "",
			"descriptionFormat": "html",
			"time": 1479694619313,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\n\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n     \"name\": \"kafka-example\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"provider.apache-kafka\",\r\n     \"hosts\": [\r\n        \"192.168.1.133:9092\",\r\n        \"192.168.1.135:9092\" \r\n      ]\r\n}"
		},
		{
			"id": "247cdd04-828d-fe1d-b4bb-099e9f999e7d",
			"headers": "",
			"url": "{{address}}/v1/providers",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Name' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493803446767,
			"name": "Provider_4.1.5.Empty_name",
			"description": "",
			"collectionId": "9f900248-50ea-d8dd-92ab-9877a3cfb6e4",
			"responses": [],
			"rawModeData": "{\r\n     \"name\":\"\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"provider.apache-kafka\",\r\n     \"hosts\": [\r\n        \"192.168.1.133:9092\"\r\n      ]\r\n}"
		},
		{
			"id": "32a768d0-81c9-bbfb-5ca8-5a7bf5f14efc",
			"headers": "",
			"url": "{{address}}/v1/providers/kafka-example",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "DELETE",
			"collectionId": "9f900248-50ea-d8dd-92ab-9877a3cfb6e4",
			"data": [],
			"dataMode": "raw",
			"name": "Provider_4.4.1.Delete",
			"description": "",
			"descriptionFormat": "html",
			"time": 1479453678099,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Body matches string\"] = responseBody.has(\"Provider 'kafka-example' has been deleted\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n     \"name\": \"kafka-example\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"provider.apache-kafka\",\r\n     \"hosts\": [\r\n        \"1111\"\r\n      ]\r\n}"
		},
		{
			"id": "607dc1b3-a2f1-7c1d-19f1-db43824c7bf9",
			"headers": "",
			"url": "{{address}}/v1/providers",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\ntests[\"Body matches string\"] = responseBody.has(\"Provider 'kafka-example' has been created.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1481607241322,
			"name": "Provider_4.1.1.Correct_data",
			"description": "",
			"collectionId": "9f900248-50ea-d8dd-92ab-9877a3cfb6e4",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"kafka-example\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"provider.apache-kafka\",\r\n     \"hosts\": [\r\n        \"{{kafka-address}}\"\r\n      ]\r\n}"
		},
		{
			"id": "754c3097-fe68-80e3-c29d-2b696a633b44",
			"headers": "",
			"url": "{{address}}/v1/providers/kafka-example",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 404\"] = responseCode.code === 404;\n\ntests[\"Body matches string\"] = responseBody.has(\"Provider 'kafka-example' has not been found.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484624515907,
			"name": "Provider_4.3.4.Delete_not_found",
			"description": "",
			"collectionId": "9f900248-50ea-d8dd-92ab-9877a3cfb6e4",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"1111111kafka-example\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"provider.apache-kafka\",\r\n     \"hosts\": [\r\n        \"1111\"\r\n      ]\r\n}"
		},
		{
			"id": "762fda5d-6c2e-bcfc-6d01-436b24b9c942",
			"headers": "",
			"url": "{{address}}/v1/providers/kafka-example",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\n\n\n\ntests[\"Body matches string\"] = responseBody.has(\"kafka-example\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1483947697591,
			"name": "Provider_4.2.1.Get_provider_by_name",
			"description": "",
			"collectionId": "9f900248-50ea-d8dd-92ab-9877a3cfb6e4",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"kafka-example\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"provider.apache-kafka\",\r\n     \"hosts\": [\r\n        \"192.168.1.133:9092\",\r\n        \"192.168.1.135:9092\" \r\n      ]\r\n}"
		},
		{
			"id": "7f5f1a19-0dd2-1dc8-01bd-603d1e60a787",
			"headers": "",
			"url": "{{address}}/v1/providers",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\n\n\n\ntests[\"Body matches string\"] = responseBody.has(\"Host cannot contain any uri path\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1479701346427,
			"name": "Provider_4.1.9.Wrong_hosts_URI",
			"description": "",
			"collectionId": "9f900248-50ea-d8dd-92ab-9877a3cfb6e4",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"kafka-example1\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"provider.apache-kafka\",\r\n     \"hosts\": [\r\n        \"/Users/bardina_md/Desktop\"\r\n      ]\r\n}"
		},
		{
			"id": "7f8ebc78-c93c-4af3-d7f8-3e8814b0ad58",
			"headers": "",
			"url": "{{address}}/v1/providers",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\n\ntests[\"Body matches string\"] = responseBody.has(\"Wrong host provided\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1479451978618,
			"name": "Provider_4.1.3.Wrong_host_provided",
			"description": "",
			"collectionId": "9f900248-50ea-d8dd-92ab-9877a3cfb6e4",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"kafka-example1\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"provider.apache-kafka\",\r\n     \"hosts\": [\r\n        \"дд\"\r\n      ]\r\n}"
		},
		{
			"id": "848e3d75-5615-40dc-ff55-e4fee2d873a6",
			"headers": "",
			"url": "{{address}}/v1/providers",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\" Unknown type '1provider.apache-kafka' of provider provided. Must be one of: [provider.apache-zookeeper, provider.apache-kafka, provider.elasticsearch, provider.sql-database, provider.restful].\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493803395432,
			"name": "Provider_4.1.17Wrong_type",
			"description": "",
			"collectionId": "9f900248-50ea-d8dd-92ab-9877a3cfb6e4",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"kafka-example1\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"1provider.apache-kafka\",\r\n     \"hosts\": [\r\n        \"192.168.1.133:9092\",\r\n        \"192.168.1.135:9092\" \r\n      ]\r\n}"
		},
		{
			"id": "8ad3f8f5-e51d-c47a-ed43-d50f734dcc51",
			"headers": "",
			"url": "{{address}}/v1/providers/kafka-example123/connection",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 409\"] = responseCode.code === 409;\n\ntests[\"Body matches string\"] = responseBody.has(\"Can not establish connection to Kafka on '111.111.1.111:1111'\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493803515374,
			"name": "Provider_4.3.2.Test_connection_not_available",
			"description": "",
			"collectionId": "9f900248-50ea-d8dd-92ab-9877a3cfb6e4",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"kafka-example\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"provider.apache-kafka\",\r\n     \"hosts\": [\r\n        \"192.168.1.133:9092\",\r\n        \"192.168.1.135:9092\" \r\n      ]\r\n}"
		},
		{
			"id": "8ea2c673-348e-1db6-7d4a-a8f2dfceb2a6",
			"headers": "",
			"url": "{{address}}/v1/providers",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Type' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493803457734,
			"name": "Provider_4.2.7.Empty_type",
			"description": "",
			"collectionId": "9f900248-50ea-d8dd-92ab-9877a3cfb6e4",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"kafka-example1\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\":\"\",\r\n     \"hosts\": [\r\n        \"192.168.1.133:9092\"\r\n      ]\r\n}"
		},
		{
			"id": "99b34ff7-16ca-41d2-446e-bf97f9931785",
			"headers": "",
			"url": "{{address}}/v1/providers/kafka-example",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 404;\n\ntests[\"Body matches string\"] = responseBody.has(\"Provider 'kafka-example' has not been found.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484624014089,
			"name": "Provider_4.2.5.Get_delited_provider",
			"description": "",
			"collectionId": "9f900248-50ea-d8dd-92ab-9877a3cfb6e4",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"kafka-example\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"provider.apache-kafka\",\r\n     \"hosts\": [\r\n        \"192.168.1.133:9092\",\r\n        \"192.168.1.135:9092\" \r\n      ]\r\n}"
		},
		{
			"id": "b8e70f70-2706-2c9c-96ab-9b82c79538f9",
			"headers": "",
			"url": "{{address}}/v1/providers",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\ntests[\"Body matches string\"] = responseBody.has(\"Provider 'kafka-example123' has been created.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493803499904,
			"name": "Provider_4.1.1.Correct_data(Wrong_host)",
			"description": "",
			"collectionId": "9f900248-50ea-d8dd-92ab-9877a3cfb6e4",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"kafka-example123\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"provider.apache-kafka\",\r\n     \"hosts\": [\r\n        \"111.111.1.111:1111\"\r\n      ]\r\n}"
		},
		{
			"id": "ba7c0b49-2117-151e-c350-72c69a53713d",
			"headers": "",
			"url": "{{address}}/v1/providers",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Hosts' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484882452751,
			"name": "Provider_4.1.6.Empty_hosts",
			"description": "",
			"collectionId": "9f900248-50ea-d8dd-92ab-9877a3cfb6e4",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"kafka-example1\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"provider.apache-kafka\"\r\n    \r\n}"
		},
		{
			"id": "bfe0d416-2dde-5f40-6c4c-de69bd060fd1",
			"headers": "",
			"url": "{{address}}/v1/providers",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "9f900248-50ea-d8dd-92ab-9877a3cfb6e4",
			"data": [],
			"dataMode": "raw",
			"name": "Provider_4.1.22.Wrong_JSON",
			"description": "",
			"descriptionFormat": "html",
			"time": 1495007934391,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Body matches string\"] = responseBody.has(\"Cannot parse json: \");\n\ntests[\"Status code is 400\"] = responseCode.code === 400;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n     \"name\": \"\",\r\n     \"description\": \"\",\r\n     \"login\": \"\",\r\n     \"password\": \"\",\r\n     \"type\": \"\"\r\n     \"hosts\": [\r\n      ]\r\n}"
		},
		{
			"id": "c0ce6c4e-843f-fb5f-8713-d8229171b4db",
			"headers": "",
			"url": "{{address}}/v1/providers",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Provider with name 'kafka-example' already exists\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1479710651797,
			"name": "Provider_4.1.4.Already_exists",
			"description": "",
			"collectionId": "9f900248-50ea-d8dd-92ab-9877a3cfb6e4",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"kafka-example\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"provider.apache-kafka\",\r\n     \"hosts\": [\r\n        \"192.168.1.133:9092\",\r\n        \"192.168.1.135:9092\" \r\n      ]\r\n}"
		},
		{
			"id": "d1cdb2d9-8ce5-7522-1847-ac4f2d040012",
			"headers": "",
			"url": "{{address}}/v1/providers/kafka_test_provider1111/connection",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 404\"] = responseCode.code === 404;\n\ntests[\"Body matches string\"] = responseBody.has(\"Provider 'kafka_test_provider1111' has not been found.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493107074027,
			"name": "Provider_4.3.3.Test_connection_Unknown",
			"description": "",
			"collectionId": "9f900248-50ea-d8dd-92ab-9877a3cfb6e4",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"kafka-example\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"provider.apache-kafka\",\r\n     \"hosts\": [\r\n        \"192.168.1.133:9092\",\r\n        \"192.168.1.135:9092\" \r\n      ]\r\n}"
		},
		{
			"id": "d3d8a3b2-f3c8-929f-5b45-dd32a05780e9",
			"headers": "",
			"url": "{{address}}/v1/providers",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Type' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493803455167,
			"name": "Provider_4.1.20.Empty_type(empty_string)",
			"description": "",
			"collectionId": "9f900248-50ea-d8dd-92ab-9877a3cfb6e4",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"kafka-example1\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n    \r\n     \"hosts\": [\r\n        \"192.168.1.133:9092\"\r\n      ]\r\n}"
		},
		{
			"id": "d4b05dab-35bd-7aa5-bff2-26b7c2458902",
			"headers": "",
			"url": "{{address}}/v1/providers",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "9f900248-50ea-d8dd-92ab-9877a3cfb6e4",
			"data": [],
			"dataMode": "raw",
			"name": "Provider_4.1.23.Empty_JSON",
			"description": "",
			"descriptionFormat": "html",
			"time": 1495007939674,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Body matches string\"] = responseBody.has(\"Json deserialization error: 'Empty JSON'\");\n\ntests[\"Status code is 400\"] = responseCode.code === 400;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": ""
		},
		{
			"id": "d596c60f-034b-9754-90e8-6b41a1ff923e",
			"headers": "",
			"url": "{{address}}/v1/providers",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\n\ntests[\"Body matches string\"] = responseBody.has(\"Wrong host provided: '-5';Host '-5' must contain port\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493960648597,
			"name": "Provider_4.1.18.negative_value_in_Host",
			"description": "",
			"collectionId": "9f900248-50ea-d8dd-92ab-9877a3cfb6e4",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"kafka-example1\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"provider.apache-kafka\",\r\n     \"hosts\": [\r\n        -5\r\n      ]\r\n}"
		},
		{
			"id": "dc9878a1-9d72-2e75-59c3-bae16712397a",
			"headers": "",
			"url": "{{address}}/v1/providers",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Provider has incorrect name: '1kafka-example'. Name of provider must contain digits, lowercase letters or hyphens. First symbol must be a letter.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1479452179945,
			"name": "Provider_4.1.2.Incorrect_name",
			"description": "",
			"collectionId": "9f900248-50ea-d8dd-92ab-9877a3cfb6e4",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"1kafka-example\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"provider.apache-kafka\",\r\n     \"hosts\": [\r\n        \"192.168.1.133:9092\",\r\n        \"192.168.1.135:9092\" \r\n      ]\r\n}"
		},
		{
			"id": "e05a131d-05af-c8d0-7692-0ed42789b901",
			"headers": "",
			"url": "{{address}}/v1/providers/kafka-example/connection",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\n\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1479711048242,
			"name": "Provider_4.3.1.Test_connection_available",
			"description": "",
			"collectionId": "9f900248-50ea-d8dd-92ab-9877a3cfb6e4",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"kafka-example\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"provider.apache-kafka\",\r\n     \"hosts\": [\r\n        \"192.168.1.133:9092\",\r\n        \"192.168.1.135:9092\" \r\n      ]\r\n}"
		},
		{
			"id": "e7583b10-4185-2053-1fb0-32218faee99d",
			"headers": "",
			"url": "{{address}}/v1/providers",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Hosts must contain at least one host.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493107105421,
			"name": "Provider_4.1.21.Empty_hosts(empty_array)",
			"description": "",
			"collectionId": "9f900248-50ea-d8dd-92ab-9877a3cfb6e4",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"kafka-example1\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"provider.apache-kafka\",\r\n    \"hosts\": []\r\n}"
		},
		{
			"id": "ecb3636e-33f7-dfe9-2f5a-8cdc1e42b84e",
			"headers": "",
			"url": "{{address}}/v1/providers/kafka-example123",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "DELETE",
			"collectionId": "9f900248-50ea-d8dd-92ab-9877a3cfb6e4",
			"data": [],
			"dataMode": "raw",
			"name": "Provider_4.4.1.Delete(Wrong_host)",
			"description": "",
			"descriptionFormat": "html",
			"time": 1493106962256,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Body matches string\"] = responseBody.has(\"Provider 'kafka-example123' has been deleted\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n     \"name\": \"kafka-example\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"provider.apache-kafka\",\r\n     \"hosts\": [\r\n        \"1111\"\r\n      ]\r\n}"
		},
		{
			"id": "f985566e-5986-31c5-c078-e2a7f9f3dbfd",
			"headers": "",
			"url": "{{address}}/v1/providers",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Name' attribute is required\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493803442455,
			"name": "Provider_4.1.20.Empty_name(empty_string)",
			"description": "",
			"collectionId": "9f900248-50ea-d8dd-92ab-9877a3cfb6e4",
			"responses": [],
			"rawModeData": "{\r\n     \r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"provider.apache-kafka\",\r\n     \"hosts\": [\r\n        \"192.168.1.133:9092\"\r\n      ]\r\n}"
		},
		{
			"id": "fffb7663-e915-8a27-3b02-ad486bd9f2b7",
			"headers": "",
			"url": "{{address}}/v1/providers/kafka-example11111",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 404\"] = responseCode.code === 404;\n\ntests[\"Body matches string\"] = responseBody.has(\"Provider 'kafka-example11111' has not been found\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493107136604,
			"name": "Provider_4.2.4.Get_not_found_provider_by_name",
			"description": "",
			"collectionId": "9f900248-50ea-d8dd-92ab-9877a3cfb6e4",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"kafka-example\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"provider.apache-kafka\",\r\n     \"hosts\": [\r\n        \"192.168.1.133:9092\",\r\n        \"192.168.1.135:9092\" \r\n      ]\r\n}"
		}
	]
}