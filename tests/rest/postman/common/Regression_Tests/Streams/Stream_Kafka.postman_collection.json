{
	"id": "faa62c09-318c-f60e-841d-fe1c95196a72",
	"name": "Kafka Stream",
	"description": "",
	"order": [
		"d53d10d4-aa81-93a0-492f-973821b201d0",
		"5bacece8-0e6d-4e97-a88e-460336999dac",
		"34c8496f-245c-130b-2ed5-e05568561f0d",
		"7ae8f635-1fd0-c805-8325-fbc0eca20964",
		"9b28aea6-0ec0-f280-2a48-7dcd3f457776",
		"2dd4167f-87e9-a21a-66fd-41723a01ffcf",
		"f6083b27-5124-4417-e491-6596364087f6",
		"1d1a9a19-73f0-9a77-6bba-95b85922ef08",
		"7e809bbe-70b4-9c2a-54d5-991fcb7aa743",
		"b58d44b7-6e00-02d4-0ab3-b4c590185e71",
		"9e735fa3-5f5d-316d-2ac0-65efa5ac8729",
		"0ce49f81-d8d3-2a8e-3464-3fb7cd75bf28",
		"63167298-ea90-b6cf-0de6-5172fb603f8b",
		"91b2dea2-1f49-7992-3813-ae540fd2b4b6",
		"67a23cfa-ac4f-2630-b3e7-56d25342f055",
		"962f05e1-f27b-394d-6394-e33f5c5d07c7",
		"8190416d-6e56-8e93-c953-e8d295dff9ff",
		"5d22ba8b-5af8-a4a1-275d-6cf69d0ac12a",
		"f2519f35-d284-3ac7-48a6-170e66c3cd5c",
		"a8cb5f80-ca61-81ab-84e5-1eb5682426da",
		"e0923568-7591-796f-5f93-b03e62fbf51e",
		"f865b0d7-7dec-98d8-3038-1d242423e6a6",
		"cc5c3284-6921-3f85-121f-a8c3e0fa877a",
		"51acb851-7990-dfeb-9e03-aa5d22733d05",
		"939f9d4d-ce79-fdc6-8399-18707de95955",
		"99714f7b-85ca-82fe-a911-b6d8ad5689ae",
		"9d27f6c4-f0de-ad54-21b2-66fa31c71cc2",
		"a4701086-32cf-98a5-5957-e766fb3c3b77",
		"1f882b64-a74c-b373-b775-20559fd7bb1f",
		"d5df1c59-f600-197f-841b-ec9ace5e280c",
		"77545269-883c-cdb0-1b83-27224727e2e9",
		"985d93cb-566c-e6d2-b863-b10dad563fd3",
		"8cda6b75-d514-5c97-f5ab-5ec2d29e8d9c",
		"dfbff1ac-1cdc-d2dd-0ddc-3cf314788f27",
		"92cca368-db06-497c-98b8-0daea761cbba",
		"df0b03e4-2d99-2b5b-0452-380c0f90fc0b",
		"9ae899c8-d710-27ec-02d8-f25c74b755da",
		"e54c34b6-e7fc-0410-b49f-115eb40abd59",
		"fcbd6c7b-2b2e-5201-c947-e8e54ff258ca",
		"bc420f4d-10e9-d97c-3e6b-6b5a45aa4454",
		"27a1a530-f51e-d877-92c9-82cf74ba89c3",
		"eb910ab6-f9e2-be47-7e11-8ca7b254d1ee",
		"e3742cbc-00d1-a950-716c-33ec8504b2f2"
	],
	"folders": [],
	"timestamp": 1480309092757,
	"owner": 0,
	"public": false,
	"hasRequests": true,
	"requests": [
		{
			"id": "0ce49f81-d8d3-2a8e-3464-3fb7cd75bf28",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Service '111rest-kafka' does not exist.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484809939484,
			"name": "Stream_3.1.14.Service_doesn't_exists",
			"description": "",
			"collectionId": "faa62c09-318c-f60e-841d-fe1c95196a72",
			"responses": [],
			"rawModeData": "{\n      \"type\": \"stream.apache-kafka\",\n      \"name\": \"rest-kafka\",\n      \"description\": \"Tstream example\",\n      \"partitions\": 1,\n      \"service\": \"111rest-kafka\",\n      \"force\": false,\n      \"replicationFactor\": 1\n}\n\n"
		},
		{
			"id": "1d1a9a19-73f0-9a77-6bba-95b85922ef08",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Type' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484796042950,
			"name": "Stream_3.1.9.Empty_type",
			"description": "",
			"collectionId": "faa62c09-318c-f60e-841d-fe1c95196a72",
			"responses": [],
			"rawModeData": "{\n      \"type\": \"\",\n      \"name\": \"rest-kafka\",\n      \"description\": \"Tstream example\",\n      \"partitions\": 1,\n      \"service\": \"rest-kafka\",\n      \"force\": false,\n      \"replicationFactor\": 1\n}\n\n"
		},
		{
			"id": "1f882b64-a74c-b373-b775-20559fd7bb1f",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "faa62c09-318c-f60e-841d-fe1c95196a72",
			"data": [],
			"dataMode": "raw",
			"name": "Stream_3.1.25.Empty_JSON",
			"description": "",
			"descriptionFormat": "html",
			"time": 1495157696422,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Json deserialization error: 'Empty JSON'\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": ""
		},
		{
			"id": "27a1a530-f51e-d877-92c9-82cf74ba89c3",
			"headers": "",
			"url": "{{address}}/v1/services/rest-kafka",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "DELETE",
			"collectionId": "faa62c09-318c-f60e-841d-fe1c95196a72",
			"data": [],
			"dataMode": "raw",
			"name": "Service_5.3.1.Delete",
			"description": "",
			"descriptionFormat": "html",
			"time": 1491295349361,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Body matches string\"] = responseBody.has(\"Service 'rest-kafka' has been deleted\");",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"rawModeData": "",
			"isFromCollection": true
		},
		{
			"id": "2dd4167f-87e9-a21a-66fd-41723a01ffcf",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Stream has incorrect name: '1rest-kafka'. Name of stream must contain digits, lowercase letters or hyphens. First symbol must be a letter.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1482376496933,
			"name": "Stream_3.1.2.Wrong_name",
			"description": "",
			"collectionId": "faa62c09-318c-f60e-841d-fe1c95196a72",
			"responses": [],
			"rawModeData": "{\n      \"type\": \"stream.apache-kafka\",\n      \"name\": \"1rest-kafka\",\n      \"description\": \"Tstream example\",\n      \"partitions\": 1,\n      \"service\": \"rest-kafka\",\n      \"force\": false,\n      \"replicationFactor\": 1\n}\n\n"
		},
		{
			"id": "34c8496f-245c-130b-2ed5-e05568561f0d",
			"headers": "",
			"url": "{{address}}/v1/services",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\ntests[\"Body matches string\"] = responseBody.has(\"Service 'rest-kafka' has been created.\");",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1492490412175,
			"name": "Service_5.1.1.Correct_data",
			"description": "",
			"collectionId": "faa62c09-318c-f60e-841d-fe1c95196a72",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"rest-kafka\",\r\n     \"description\": \"example kafka provider\",\r\n     \"provider\": \"kafka-example\",\r\n     \"zkProvider\": \"rest-zookeeper\",\r\n     \"type\": \"service.apache-kafka\"\r\n}",
			"isFromCollection": true
		},
		{
			"id": "51acb851-7990-dfeb-9e03-aa5d22733d05",
			"headers": "",
			"headerData": [],
			"url": "{{address}}/v1/streams",
			"queryParams": [],
			"preRequestScript": null,
			"pathVariables": {},
			"pathVariableData": [],
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Json contains incorrect value in property 'partitions'\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1498025993216,
			"name": "Stream_3.1.23.String_partitions",
			"description": "",
			"collectionId": "faa62c09-318c-f60e-841d-fe1c95196a72",
			"responses": [],
			"rawModeData": "{\r\n      \"type\": \"stream.apache-kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n\t  \"partitions\": \"a\",\r\n      \"service\": \"rest-kafka\",\r\n      \"force\": false,\r\n      \"replicationFactor\": 1\r\n}"
		},
		{
			"id": "5bacece8-0e6d-4e97-a88e-460336999dac",
			"headers": "",
			"headerData": [],
			"url": "{{address}}/v1/providers",
			"queryParams": [],
			"preRequestScript": null,
			"pathVariables": {},
			"pathVariableData": [],
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\ntests[\"Body matches string\"] = responseBody.has(\"Provider 'kafka-example' has been created.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1500615463780,
			"name": "Provider_4.1.1.Correct_data",
			"description": "",
			"collectionId": "faa62c09-318c-f60e-841d-fe1c95196a72",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"kafka-example\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"provider.apache-kafka\",\r\n     \"hosts\": [\r\n        \"{{kafka-address}}\"\r\n      ]\r\n}"
		},
		{
			"id": "5d22ba8b-5af8-a4a1-275d-6cf69d0ac12a",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Partitions' must be a positive integer.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1495161705740,
			"name": "Stream_3.1.4.Wrong_partitions",
			"description": "",
			"collectionId": "faa62c09-318c-f60e-841d-fe1c95196a72",
			"responses": [],
			"rawModeData": "{\r\n      \"type\": \"stream.apache-kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": 0,\r\n      \"service\": \"rest-kafka\",\r\n      \"force\": false,\r\n      \"replicationFactor\": 1\r\n}\r\n\r\n"
		},
		{
			"id": "63167298-ea90-b6cf-0de6-5172fb603f8b",
			"headers": "",
			"headerData": [],
			"url": "{{address}}/v1/providers",
			"queryParams": [],
			"preRequestScript": null,
			"pathVariables": {},
			"pathVariableData": [],
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\ntests[\"Body matches string\"] = responseBody.has(\"Provider 'zookeeper-for-tstr-serv' has been created.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1500615501966,
			"name": "Provider_5.1.1.Correct_data(Wrong_service)",
			"description": "",
			"collectionId": "faa62c09-318c-f60e-841d-fe1c95196a72",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"zookeeper-for-tstr-serv\",\r\n     \"description\": \"example zooKeeper provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"provider.apache-zookeeper\",\r\n     \"hosts\": [\r\n        \"{{zookeeper-address}}\"\r\n      ]\r\n}"
		},
		{
			"id": "67a23cfa-ac4f-2630-b3e7-56d25342f055",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Service for 'stream.apache-kafka' stream' must be of type: 'service.apache-kafka' ('service.t-streams' is given instead).\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493268998737,
			"name": "Stream_3.1.15.Wrong_service",
			"description": "",
			"collectionId": "faa62c09-318c-f60e-841d-fe1c95196a72",
			"responses": [],
			"rawModeData": "{\n      \"type\": \"stream.apache-kafka\",\n      \"name\": \"rest-kafka\",\n      \"description\": \"Tstream example\",\n      \"partitions\": 1,\n      \"service\": \"tstr-for-output-stream\",\n      \"force\": false,\n      \"replicationFactor\": 1\n}\n\n"
		},
		{
			"id": "77545269-883c-cdb0-1b83-27224727e2e9",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "faa62c09-318c-f60e-841d-fe1c95196a72",
			"data": [],
			"dataMode": "raw",
			"name": "Stream_3.1.3.Already_exists",
			"description": "",
			"descriptionFormat": "html",
			"time": 1480316203828,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\" Stream with name 'rest-kafka' already exists.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\n      \"type\": \"stream.apache-kafka\",\n      \"name\": \"rest-kafka\",\n      \"description\": \"Tstream example\",\n      \"partitions\": 1,\n      \"service\": \"rest-kafka\",\n      \"force\": false,\n      \"replicationFactor\": 1\n}\n\n"
		},
		{
			"id": "7ae8f635-1fd0-c805-8325-fbc0eca20964",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\" 'Name' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484796030598,
			"name": "Stream_3.1.18.Empty_name(empty_string)",
			"description": "",
			"collectionId": "faa62c09-318c-f60e-841d-fe1c95196a72",
			"responses": [],
			"rawModeData": "{\r\n      \"type\": \"stream.apache-kafka\",\r\n\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": 1,\r\n      \"service\": \"rest-kafka\",\r\n      \"force\": false,\r\n      \"replicationFactor\": 1\r\n}\r\n"
		},
		{
			"id": "7e809bbe-70b4-9c2a-54d5-991fcb7aa743",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Unknown type '111stream.apache-kafka' of stream provided. Must be one of: [stream.t-streams, stream.apache-kafka, stream.sql-database, stream.elasticsearch, stream.restful]\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493265491371,
			"name": "Stream_3.1.13.Wrong_type",
			"description": "",
			"collectionId": "faa62c09-318c-f60e-841d-fe1c95196a72",
			"responses": [],
			"rawModeData": "{\n      \"type\": \"111stream.apache-kafka\",\n      \"name\": \"rest-kafka\",\n      \"description\": \"Tstream example\",\n      \"partitions\": 1,\n      \"service\": \"rest-kafka\",\n      \"force\": false,\n      \"replicationFactor\": 1\n}\n\n"
		},
		{
			"id": "8190416d-6e56-8e93-c953-e8d295dff9ff",
			"headers": "",
			"url": "{{address}}/v1/providers/zookeeper-for-tstr-serv",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "DELETE",
			"collectionId": "faa62c09-318c-f60e-841d-fe1c95196a72",
			"data": [],
			"dataMode": "raw",
			"name": "Provider_5.4.1.Delete(Wrong_service)",
			"description": "",
			"descriptionFormat": "html",
			"time": 1493268941074,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Body matches string\"] = responseBody.has(\"Provider 'zookeeper-for-tstr-serv' has been deleted\" );",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": ""
		},
		{
			"id": "8cda6b75-d514-5c97-f5ab-5ec2d29e8d9c",
			"headers": "",
			"url": "{{address}}/v1/streams/rest-kafka111",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 404\"] = responseCode.code === 404;\n\n\n\ntests[\"Body matches string\"] = responseBody.has(\"Stream 'rest-kafka111' has not been found.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1483934172034,
			"name": "Stream_3.2.5.Get_not_found",
			"description": "",
			"collectionId": "faa62c09-318c-f60e-841d-fe1c95196a72",
			"responses": [],
			"rawModeData": ""
		},
		{
			"id": "91b2dea2-1f49-7992-3813-ae540fd2b4b6",
			"headers": "",
			"url": "{{address}}/v1/services",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "faa62c09-318c-f60e-841d-fe1c95196a72",
			"data": [],
			"dataMode": "raw",
			"name": "Service_6.1.1.Correct_data(Wrong_service)",
			"description": "",
			"descriptionFormat": "html",
			"time": 1493268911194,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\ntests[\"Body matches string\"] = responseBody.has(\"Service 'tstr-for-output-stream' has been created.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n     \"type\": \"service.t-streams\",\r\n     \"name\": \"tstr-for-output-stream\",\r\n     \"description\": \"tstream\",\r\n     \"provider\": \"zookeeper-for-tstr-serv\",\r\n     \"prefix\": \"/path\",\r\n     \"token\": \"12345678910111213141516171819202\"\r\n}"
		},
		{
			"id": "92cca368-db06-497c-98b8-0daea761cbba",
			"headers": "",
			"url": "{{address}}/v1/providers/kafka-example",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 422\"] = responseCode.code === 422;\n\ntests[\"Body matches string\"] = responseBody.has(\"Cannot delete provider 'kafka-example'. Provider is used in services.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493269175296,
			"name": "Provider_4.4.2.Delete_provider_used_in_service",
			"description": "",
			"collectionId": "faa62c09-318c-f60e-841d-fe1c95196a72",
			"responses": [],
			"rawModeData": ""
		},
		{
			"id": "939f9d4d-ce79-fdc6-8399-18707de95955",
			"headers": "",
			"headerData": [],
			"url": "{{address}}/v1/streams",
			"queryParams": [],
			"preRequestScript": null,
			"pathVariables": {},
			"pathVariableData": [],
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Json contains incorrect value in property 'partitions'\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1498026121963,
			"name": "Stream_3.1.10.Empty_partitions",
			"description": "",
			"collectionId": "faa62c09-318c-f60e-841d-fe1c95196a72",
			"responses": [],
			"rawModeData": "{\r\n      \"type\": \"stream.apache-kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n\t  \"partitions\": \"\",\r\n      \"service\": \"rest-kafka\",\r\n      \"force\": false,\r\n      \"replicationFactor\": 1\r\n}"
		},
		{
			"id": "962f05e1-f27b-394d-6394-e33f5c5d07c7",
			"headers": "",
			"url": "{{address}}/v1/services/tstr-for-output-stream",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "DELETE",
			"collectionId": "faa62c09-318c-f60e-841d-fe1c95196a72",
			"data": [],
			"dataMode": "raw",
			"name": "Service_6.3.1.Delete(Wrong_service)",
			"description": "",
			"descriptionFormat": "html",
			"time": 1493268922538,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Body matches string\"] = responseBody.has(\"Service 'tstr-for-output-stream' has been deleted\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": ""
		},
		{
			"id": "985d93cb-566c-e6d2-b863-b10dad563fd3",
			"headers": "",
			"url": "{{address}}/v1/streams/rest-kafka",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\n\n\ntests[\"Body matches string\"] = responseBody.has(\"rest-kafka\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1482291587684,
			"name": "Stream_3.2.1.Get_by_name",
			"description": "",
			"collectionId": "faa62c09-318c-f60e-841d-fe1c95196a72",
			"responses": [],
			"rawModeData": ""
		},
		{
			"id": "99714f7b-85ca-82fe-a911-b6d8ad5689ae",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Partitions' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484796057133,
			"name": "Stream_3.1.21.Empty_partitions(empty_string)",
			"description": "",
			"collectionId": "faa62c09-318c-f60e-841d-fe1c95196a72",
			"responses": [],
			"rawModeData": "{\r\n      \"type\": \"stream.apache-kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n\r\n      \"service\": \"rest-kafka\",\r\n      \"force\": false,\r\n      \"replicationFactor\": 1\r\n}\r\n\r\n"
		},
		{
			"id": "9ae899c8-d710-27ec-02d8-f25c74b755da",
			"headers": "",
			"url": "{{address}}/v1/services/rest-kafka/related",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Body matches string\"] = responseBody.has(\"rest-kafka\");\n\ntests[\"Body matches string\"] = responseBody.has(\"streams\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1495421369488,
			"name": "Service_5.2.6.Related",
			"description": "",
			"collectionId": "faa62c09-318c-f60e-841d-fe1c95196a72",
			"responses": [],
			"rawModeData": ""
		},
		{
			"id": "9b28aea6-0ec0-f280-2a48-7dcd3f457776",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\" 'Name' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484796034294,
			"name": "Stream_3.1.7.Empty_name",
			"description": "",
			"collectionId": "faa62c09-318c-f60e-841d-fe1c95196a72",
			"responses": [],
			"rawModeData": "{\r\n      \"type\": \"stream.apache-kafka\",\r\n      \"name\": \"\",\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": 1,\r\n      \"service\": \"rest-kafka\",\r\n      \"force\": false,\r\n      \"replicationFactor\": 1\r\n}\r\n"
		},
		{
			"id": "9d27f6c4-f0de-ad54-21b2-66fa31c71cc2",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'replicationFactor' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493269063217,
			"name": "Stream_3.1.22.Empty_replication_factor(empty_string)",
			"description": "",
			"collectionId": "faa62c09-318c-f60e-841d-fe1c95196a72",
			"responses": [],
			"rawModeData": "{\r\n      \"type\": \"stream.apache-kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": 1,\r\n      \"service\": \"rest-kafka\",\r\n      \"force\": false\r\n\r\n}\r\n\r\n"
		},
		{
			"id": "9e735fa3-5f5d-316d-2ac0-65efa5ac8729",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Service' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484796051133,
			"name": "Stream_3.1.8.Empty_service",
			"description": "",
			"collectionId": "faa62c09-318c-f60e-841d-fe1c95196a72",
			"responses": [],
			"rawModeData": "{\n      \"type\": \"stream.apache-kafka\",\n      \"name\": \"rest-kafka\",\n      \"description\": \"Tstream example\",\n      \"partitions\": 1,\n      \"service\": \"\",\n      \"force\": false,\n      \"replicationFactor\": 1\n}\n\n"
		},
		{
			"id": "a4701086-32cf-98a5-5957-e766fb3c3b77",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "faa62c09-318c-f60e-841d-fe1c95196a72",
			"data": [],
			"dataMode": "raw",
			"name": "Stream_3.1.24.Wrong_JSON",
			"description": "",
			"descriptionFormat": "html",
			"time": 1495157688480,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Cannot parse json:\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n      \"type\": \"stream.t-streams\",\r\n      \"name\": \"rest-tstream\",\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": 1,\r\n      \"service\": \"rest-tstream\"\r\n      \"force\": false\r\n}"
		},
		{
			"id": "a8cb5f80-ca61-81ab-84e5-1eb5682426da",
			"headers": "",
			"headerData": [],
			"url": "{{address}}/v1/streams",
			"queryParams": [],
			"preRequestScript": null,
			"pathVariables": {},
			"pathVariableData": [],
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Json contains incorrect value in property\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1498017088559,
			"name": "Stream_3.1.23.Partitions_string",
			"description": "",
			"collectionId": "faa62c09-318c-f60e-841d-fe1c95196a72",
			"responses": [],
			"rawModeData": "{\r\n      \"type\": \"stream.apache-kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": \"а\",\r\n      \"service\": \"rest-kafka\",\r\n      \"force\": false,\r\n      \"replicationFactor\": 1\r\n}\r\n\r\n"
		},
		{
			"id": "b58d44b7-6e00-02d4-0ab3-b4c590185e71",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Service' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484796047759,
			"name": "Stream_3.1.20.Empty_service(empty_string)",
			"description": "",
			"collectionId": "faa62c09-318c-f60e-841d-fe1c95196a72",
			"responses": [],
			"rawModeData": "{\n      \"type\": \"stream.apache-kafka\",\n      \"name\": \"rest-kafka\",\n      \"description\": \"Tstream example\",\n      \"partitions\": 1,\n\n      \"force\": false,\n      \"replicationFactor\": 1\n}\n\n"
		},
		{
			"id": "bc420f4d-10e9-d97c-3e6b-6b5a45aa4454",
			"headers": "",
			"url": "{{address}}/v1/streams/rest-kafka",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 404\"] = responseCode.code === 404;\n\n\n\ntests[\"Body matches string\"] = responseBody.has(\"Stream 'rest-kafka' has not been found.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493269228439,
			"name": "Stream_3.3.4.Delete_not_found",
			"description": "",
			"collectionId": "faa62c09-318c-f60e-841d-fe1c95196a72",
			"responses": [],
			"rawModeData": ""
		},
		{
			"id": "cc5c3284-6921-3f85-121f-a8c3e0fa877a",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "faa62c09-318c-f60e-841d-fe1c95196a72",
			"data": [],
			"dataMode": "raw",
			"name": "Stream_3.1.17.Negative_value_in_replication factor",
			"description": "",
			"descriptionFormat": "html",
			"time": 1482376413038,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'replicationFactor' must be a positive integer.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n      \"type\": \"stream.apache-kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": 1,\r\n      \"service\": \"rest-kafka\",\r\n      \"force\": false,\r\n      \"replicationFactor\": -5\r\n}\r\n\r\n"
		},
		{
			"id": "d53d10d4-aa81-93a0-492f-973821b201d0",
			"headers": "",
			"headerData": [],
			"url": "{{address}}/v1/providers",
			"queryParams": [],
			"preRequestScript": null,
			"pathVariables": {},
			"pathVariableData": [],
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\ntests[\"Body matches string\"] = responseBody.has(\"Provider 'rest-zookeeper' has been created.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1500615465364,
			"name": "Provider_5.1.1.Correct_data",
			"description": "",
			"collectionId": "faa62c09-318c-f60e-841d-fe1c95196a72",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"rest-zookeeper\",\r\n     \"description\": \"example zooKeeper provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"provider.apache-zookeeper\",\r\n     \"hosts\": [\r\n        \"{{zookeeper-address}}\"\r\n      ]\r\n}"
		},
		{
			"id": "d5df1c59-f600-197f-841b-ec9ace5e280c",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\ntests[\"Body matches string\"] = responseBody.has(\"Stream 'rest-kafka' has been  created.\");",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1492491240409,
			"name": "Stream_2.1.1.Correct_data",
			"description": "",
			"collectionId": "faa62c09-318c-f60e-841d-fe1c95196a72",
			"responses": [],
			"rawModeData": "{\r\n      \"type\": \"stream.apache-kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": 1,\r\n      \"service\": \"rest-kafka\",\r\n      \"force\": false,\r\n      \"replicationFactor\": 1\r\n}\r\n\r\n",
			"isFromCollection": true
		},
		{
			"id": "df0b03e4-2d99-2b5b-0452-380c0f90fc0b",
			"headers": "",
			"url": "{{address}}/v1/services/rest-kafka",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 422\"] = responseCode.code === 422;\n\ntests[\"Body matches string\"] = responseBody.has(\"Cannot delete service 'rest-kafka'. Service is used in streams.\");",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1492585185616,
			"name": "Service_5.3.2.Delete_service_used_in_streams",
			"description": "",
			"collectionId": "faa62c09-318c-f60e-841d-fe1c95196a72",
			"responses": [],
			"rawModeData": ""
		},
		{
			"id": "dfbff1ac-1cdc-d2dd-0ddc-3cf314788f27",
			"headers": "",
			"url": "{{address}}/v1/providers/rest-zookeeper",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 422\"] = responseCode.code === 422;\n\ntests[\"Body matches string\"] = responseBody.has(\"Cannot delete provider 'rest-zookeeper'. Provider is used in services\" );",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1492585162279,
			"name": "Provider_5.4.2.Delete_provider_used_in_service",
			"description": "",
			"collectionId": "faa62c09-318c-f60e-841d-fe1c95196a72",
			"responses": [],
			"rawModeData": ""
		},
		{
			"id": "e0923568-7591-796f-5f93-b03e62fbf51e",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "faa62c09-318c-f60e-841d-fe1c95196a72",
			"data": [],
			"dataMode": "raw",
			"name": "Stream_3.1.5.Wrong_replication_factor",
			"description": "",
			"descriptionFormat": "html",
			"time": 1480316612725,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'replicationFactor' must be a positive integer.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n      \"type\": \"stream.apache-kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": 1,\r\n      \"service\": \"rest-kafka\",\r\n      \"force\": false,\r\n      \"replicationFactor\": 0\r\n}\r\n\r\n"
		},
		{
			"id": "e3742cbc-00d1-a950-716c-33ec8504b2f2",
			"headers": "",
			"url": "{{address}}/v1/providers/kafka-example",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "DELETE",
			"collectionId": "faa62c09-318c-f60e-841d-fe1c95196a72",
			"data": [],
			"dataMode": "raw",
			"name": "Provider_4.4.1.Delete",
			"description": "",
			"descriptionFormat": "html",
			"time": 1492490207692,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Body matches string\"] = responseBody.has(\"Provider 'kafka-example' has been deleted\");",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"rawModeData": "{\r\n     \"name\": \"kafka-example\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"kafka\",\r\n     \"hosts\": [\r\n        \"1111\"\r\n      ]\r\n}",
			"isFromCollection": true
		},
		{
			"id": "e54c34b6-e7fc-0410-b49f-115eb40abd59",
			"headers": "",
			"url": "{{address}}/v1/streams/rest-kafka",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\n\n\ntests[\"Body matches string\"] = responseBody.has(\"Stream 'rest-kafka' has been deleted.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493269185112,
			"name": "Stream_3.3.1.Delete",
			"description": "",
			"collectionId": "faa62c09-318c-f60e-841d-fe1c95196a72",
			"responses": [],
			"rawModeData": ""
		},
		{
			"id": "eb910ab6-f9e2-be47-7e11-8ca7b254d1ee",
			"headers": "",
			"url": "{{address}}/v1/providers/rest-zookeeper",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "DELETE",
			"collectionId": "faa62c09-318c-f60e-841d-fe1c95196a72",
			"data": [],
			"dataMode": "raw",
			"name": "Provider_5.4.1.Delete",
			"description": "",
			"descriptionFormat": "html",
			"time": 1491295355745,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Body matches string\"] = responseBody.has(\"Provider 'rest-zookeeper' has been deleted\" );",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"rawModeData": ""
		},
		{
			"id": "f2519f35-d284-3ac7-48a6-170e66c3cd5c",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Partitions' must be a positive integer.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1482376441374,
			"name": "Stream_3.1.16.Negative_value_in_partitions",
			"description": "",
			"collectionId": "faa62c09-318c-f60e-841d-fe1c95196a72",
			"responses": [],
			"rawModeData": "{\r\n      \"type\": \"stream.apache-kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": -5,\r\n      \"service\": \"rest-kafka\",\r\n      \"force\": false,\r\n      \"replicationFactor\": 1\r\n}\r\n\r\n"
		},
		{
			"id": "f6083b27-5124-4417-e491-6596364087f6",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Type' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484809887763,
			"name": "Stream_3.1.19.Empty_type(empty_string)",
			"description": "",
			"collectionId": "faa62c09-318c-f60e-841d-fe1c95196a72",
			"responses": [],
			"rawModeData": "{\n\n      \"name\": \"rest-kafka\",\n      \"description\": \"Tstream example\",\n      \"partitions\": 1,\n      \"service\": \"rest-kafka\",\n      \"force\": false,\n      \"replicationFactor\": 1\n}\n\n"
		},
		{
			"id": "f865b0d7-7dec-98d8-3038-1d242423e6a6",
			"headers": "",
			"headerData": [],
			"url": "{{address}}/v1/streams",
			"queryParams": [],
			"preRequestScript": null,
			"pathVariables": {},
			"pathVariableData": [],
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Json contains incorrect value in property\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1498016694681,
			"name": "Stream_3.1.6.Replication_factor_string",
			"description": "",
			"collectionId": "faa62c09-318c-f60e-841d-fe1c95196a72",
			"responses": [],
			"rawModeData": "{\r\n      \"type\": \"stream.apache-kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": 1,\r\n      \"service\": \"rest-kafka\",\r\n      \"force\": false,\r\n      \"replicationFactor\": \"a\"\r\n}\r\n\r\n"
		},
		{
			"id": "fcbd6c7b-2b2e-5201-c947-e8e54ff258ca",
			"headers": "",
			"url": "{{address}}/v1/streams/rest-kafka",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 404;\n\ntests[\"Body matches string\"] = responseBody.has(\"Stream 'rest-kafka' has not been found.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484626094887,
			"name": "Stream_3.2.6.Get_deleted",
			"description": "",
			"collectionId": "faa62c09-318c-f60e-841d-fe1c95196a72",
			"responses": [],
			"rawModeData": ""
		}
	]
}