{
	"id": "69c979e1-03b5-d5bd-1f61-ac88ec976ad5",
	"name": "Kafka Service",
	"description": "",
	"order": [
		"5ecd6528-687b-9866-9054-1b2ab9d7fa70",
		"5394d979-4334-4578-e6eb-d1573ad392b7",
		"0d27ab57-573d-fc53-3ee9-fc7541e4152c",
		"ebd60464-5582-ca84-5f34-51d8ea0b9062",
		"ac8f34d8-8e49-3112-3940-fa1f2d42cbc4",
		"d2ef7713-fb7c-0bc2-6b92-67fc2ef9fe7e",
		"59c8848c-3970-c82a-c64d-4cee05af00ea",
		"dca2d1c3-a3ae-0275-4276-5a553ea8b744",
		"752795d6-630f-ee77-98a5-7e075395304b",
		"7d228447-7a6a-a6bb-5fcb-a8b25d7cb47f",
		"6dc183cd-bc5b-f238-8926-273fec1d7c37",
		"4015f452-92f2-1abd-9ad6-d99e11b887d2",
		"0c41daa7-0886-a602-d1bc-748c9e7b16b4",
		"02ccc621-79a6-d711-d5c4-72a0499ef7a3",
		"c52e9072-9b16-1660-8739-7ed74cdd95d7",
		"b8d1e794-352d-f700-ac52-a13c00dc3cc6",
		"90f3c3bd-670c-8873-ec22-05cfb4770762",
		"01e894ce-ccc2-39ce-093c-9a6e1bc71cba",
		"1d0a3194-dab8-e7ba-1810-a3b9f7c21fd9",
		"6239f918-aaa3-004a-29d8-11389b0a0ef9",
		"4149fd96-aaa4-de20-3162-5ad70e4c15f5",
		"a90acb5f-1204-f54b-d994-0b1000ba0c36",
		"c4345748-18b2-5b43-64a6-daf30c9ad6f8",
		"abc39bda-6740-0f91-3370-58a3b0132a51",
		"e53e1004-2625-f756-fa83-8cbb5615c35e",
		"1a56268a-80c7-32f4-33af-4e781b66cbf0",
		"e0814d58-9787-544a-8765-30d13d103136",
		"82d17caa-3d75-e8ad-ec0f-a8b45c1dbe1f",
		"c8c4d136-9dcd-07af-f754-ab8926ad145b",
		"14751f56-3f2d-bd41-63ef-c7f8232d6e13",
		"49bb54a0-78fa-60e0-5151-856030c6ed76",
		"f2b950ca-df7b-d022-1280-f7e056776507",
		"7319cffe-41bc-280f-08b6-7a46239778ba",
		"30d169d9-c1f2-2723-8627-beafb75336dd",
		"f9d229c7-7f8a-2ff1-1a16-3fbb04f9e142",
		"b52810f3-d989-1d18-5fe2-6dfc47449327",
		"32473dd4-ca24-b40a-ba7f-d005a1256c1b"
	],
	"folders": [],
	"timestamp": 1479797735351,
	"owner": 0,
	"public": false,
	"hasRequests": true,
	"requests": [
		{
			"id": "01e894ce-ccc2-39ce-093c-9a6e1bc71cba",
			"headers": "",
			"headerData": [],
			"url": "{{address}}/v1/services",
			"queryParams": [],
			"preRequestScript": null,
			"pathVariables": {},
			"pathVariableData": [],
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'zkProvider' must be of type: 'provider.apache-zookeeper' ('provider.sql-database' is given instead)\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1500607324445,
			"name": "Service_5.1.14.Zk-provider_wrong_type",
			"description": "",
			"collectionId": "69c979e1-03b5-d5bd-1f61-ac88ec976ad5",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"rest-kafka1\",\r\n     \"description\": \"example kafka provider\",\r\n     \"provider\": \"kafka-rest\",\r\n     \"zkProvider\": \"rest-jdbc\",\r\n     \"type\": \"service.apache-kafka\",\r\n     \"zkNamespace\": \"a1\"\r\n}"
		},
		{
			"id": "02ccc621-79a6-d711-d5c4-72a0499ef7a3",
			"headers": "",
			"url": "{{address}}/v1/services",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'zkProvider' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1489390645348,
			"name": "Service_5.1.22.Empty_zk-provider(empty_string)",
			"description": "",
			"collectionId": "69c979e1-03b5-d5bd-1f61-ac88ec976ad5",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"rest-kafka1\",\r\n     \"description\": \"example kafka provider\",\r\n     \"provider\": \"kafka-rest\",\r\n\r\n     \"type\": \"service.apache-kafka\",\r\n     \"zkNamespace\": \"a1\"\r\n}"
		},
		{
			"id": "0c41daa7-0886-a602-d1bc-748c9e7b16b4",
			"headers": "",
			"url": "{{address}}/v1/services",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'zkNamespace' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1489390609941,
			"name": "Service_5.1.7.Empty_zk-namespace",
			"description": "",
			"collectionId": "69c979e1-03b5-d5bd-1f61-ac88ec976ad5",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"rest-kafka1\",\r\n     \"description\": \"example kafka provider\",\r\n     \"provider\": \"kafka-rest\",\r\n     \"zkProvider\": \"rest-zookeeper\",\r\n     \"type\": \"service.apache-kafka\",\r\n     \"zkNamespace\": \"\"\r\n} "
		},
		{
			"id": "0d27ab57-573d-fc53-3ee9-fc7541e4152c",
			"headers": "",
			"url": "{{address}}/v1/services",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Service has incorrect name: '1rest-kafka'. Name of service must contain digits, lowercase letters or hyphens. First symbol must be a letter.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493177863781,
			"name": "Service_5.1.2.Wrong_name",
			"description": "",
			"collectionId": "69c979e1-03b5-d5bd-1f61-ac88ec976ad5",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"1rest-kafka\",\r\n     \"description\": \"example kafka provider\",\r\n     \"provider\": \"kafka-rest\",\r\n     \"zkProvider\": \"rest-zookeeper\",\r\n     \"type\": \"service.apache-kafka\",\r\n     \"zkNamespace\": \"a1\"\r\n}"
		},
		{
			"id": "14751f56-3f2d-bd41-63ef-c7f8232d6e13",
			"headers": "",
			"url": "{{address}}/v1/providers/kafka-rest/related",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Body matches string\"] = responseBody.has(\"kafka-rest\");\n\ntests[\"Body matches string\"] = responseBody.has(\"services\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1495420595899,
			"name": "Provider_4.2.5.Related",
			"description": "",
			"collectionId": "69c979e1-03b5-d5bd-1f61-ac88ec976ad5",
			"responses": [],
			"rawModeData": ""
		},
		{
			"id": "1a56268a-80c7-32f4-33af-4e781b66cbf0",
			"headers": "",
			"url": "{{address}}/v1/services",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\ntests[\"Body matches string\"] = responseBody.has(\"Service 'rest-kafka' has been created.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493179199889,
			"name": "Service_5.1.1.Correct_data",
			"description": "",
			"collectionId": "69c979e1-03b5-d5bd-1f61-ac88ec976ad5",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"rest-kafka\",\r\n     \"description\": \"example kafka provider\",\r\n     \"provider\": \"kafka-rest\",\r\n     \"zkProvider\": \"rest-zookeeper\",\r\n     \"type\": \"service.apache-kafka\",\r\n     \"zkNamespace\": \"a1\"\r\n}"
		},
		{
			"id": "1d0a3194-dab8-e7ba-1810-a3b9f7c21fd9",
			"headers": "",
			"url": "{{address}}/v1/providers/rest-jdbc",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "DELETE",
			"collectionId": "69c979e1-03b5-d5bd-1f61-ac88ec976ad5",
			"data": [],
			"dataMode": "raw",
			"name": "Provider_7.4.1.Delete(Wrong_zKprovider)",
			"description": "",
			"descriptionFormat": "html",
			"time": 1493179095746,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Body matches string\"] = responseBody.has(\"Provider 'rest-jdbc' has been deleted\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": ""
		},
		{
			"id": "30d169d9-c1f2-2723-8627-beafb75336dd",
			"headers": "",
			"url": "{{address}}/v1/services/rest-kafka",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 404;\n\ntests[\"Body matches string\"] = responseBody.has(\"Service 'rest-kafka' has not been found.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484625500175,
			"name": "Service_5.2.6.Get_deleted_service",
			"description": "",
			"collectionId": "69c979e1-03b5-d5bd-1f61-ac88ec976ad5",
			"responses": [],
			"rawModeData": ""
		},
		{
			"id": "32473dd4-ca24-b40a-ba7f-d005a1256c1b",
			"headers": "",
			"url": "{{address}}/v1/providers/kafka-rest",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Body matches string\"] = responseBody.has(\"Provider 'kafka-rest' has been deleted\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493182483563,
			"name": "Provider_4.4.1.Delete",
			"description": "",
			"collectionId": "69c979e1-03b5-d5bd-1f61-ac88ec976ad5",
			"responses": [],
			"rawModeData": ""
		},
		{
			"id": "4015f452-92f2-1abd-9ad6-d99e11b887d2",
			"headers": "",
			"url": "{{address}}/v1/services",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'zkNamespace' attribute is required\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1489390219096,
			"name": "Service_5.1.21.Empty_zk-namespace (empty_string)",
			"description": "",
			"collectionId": "69c979e1-03b5-d5bd-1f61-ac88ec976ad5",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"rest-kafka1\",\r\n     \"description\": \"example kafka provider\",\r\n     \"provider\": \"kafka-rest\",\r\n     \"zkProvider\": \"rest-zookeeper\",\r\n     \"type\": \"service.apache-kafka\"\r\n}"
		},
		{
			"id": "4149fd96-aaa4-de20-3162-5ad70e4c15f5",
			"headers": "",
			"headerData": [],
			"url": "{{address}}/v1/providers",
			"queryParams": [],
			"preRequestScript": null,
			"pathVariables": {},
			"pathVariableData": [],
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\ntests[\"Body matches string\"] = responseBody.has(\"Provider 'rest-jdbc' has been created.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1500607408531,
			"name": "Provider_7.1.1.Correct_data(Wrong_provider)",
			"description": "",
			"collectionId": "69c979e1-03b5-d5bd-1f61-ac88ec976ad5",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"rest-jdbc\",\r\n     \"description\": \"example jdbc provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"provider.sql-database\",\r\n     \"driver\":\"mysql\",\r\n     \"hosts\": [\r\n        \"192.168.1.225:5432\"\r\n      ]\r\n}"
		},
		{
			"id": "49bb54a0-78fa-60e0-5151-856030c6ed76",
			"headers": "",
			"url": "{{address}}/v1/providers/rest-zookeeper",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 422\"] = responseCode.code === 422;\n\ntests[\"Body matches string\"] = responseBody.has(\"Cannot delete provider 'rest-zookeeper'. Provider is used in services.\" );",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1492487745192,
			"name": "Provider_5.4.2.Delete_provider_used_in_service.",
			"description": "",
			"collectionId": "69c979e1-03b5-d5bd-1f61-ac88ec976ad5",
			"responses": [],
			"rawModeData": "",
			"isFromCollection": true
		},
		{
			"id": "5394d979-4334-4578-e6eb-d1573ad392b7",
			"headers": "",
			"headerData": [],
			"url": "{{address}}/v1/providers",
			"queryParams": [],
			"preRequestScript": null,
			"pathVariables": {},
			"pathVariableData": [],
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\ntests[\"Body matches string\"] = responseBody.has(\"Provider 'rest-zookeeper' has been created.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1500606380241,
			"name": "Provider_5.1.1.Correct_data",
			"description": "",
			"collectionId": "69c979e1-03b5-d5bd-1f61-ac88ec976ad5",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"rest-zookeeper\",\r\n     \"description\": \"example zooKeeper provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"provider.apache-zookeeper\",\r\n     \"hosts\": [\r\n        \"{{zookeeper-address}}\"\r\n      ]\r\n}"
		},
		{
			"id": "59c8848c-3970-c82a-c64d-4cee05af00ea",
			"headers": "",
			"url": "{{address}}/v1/services",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Type' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1489390459494,
			"name": "Service_5.1.19.Empty_type(empty_string)",
			"description": "",
			"collectionId": "69c979e1-03b5-d5bd-1f61-ac88ec976ad5",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"rest-kafka1\",\r\n     \"description\": \"example kafka provider\",\r\n     \"provider\": \"kafka-rest\",\r\n     \"zkProvider\": \"rest-zookeeper\",\r\n\r\n     \"zkNamespace\": \"a1\"\r\n}"
		},
		{
			"id": "5ecd6528-687b-9866-9054-1b2ab9d7fa70",
			"headers": "",
			"headerData": [],
			"url": "{{address}}/v1/providers",
			"queryParams": [],
			"preRequestScript": null,
			"pathVariables": {},
			"pathVariableData": [],
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\ntests[\"Body matches string\"] = responseBody.has(\"Provider 'kafka-rest' has been created.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1500606363499,
			"name": "Provider_4.1.1.Correct_data",
			"description": "",
			"collectionId": "69c979e1-03b5-d5bd-1f61-ac88ec976ad5",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"kafka-rest\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"provider.apache-kafka\",\r\n     \"hosts\": [\r\n        \"{{kafka-address}}\"\r\n      ]\r\n}"
		},
		{
			"id": "6239f918-aaa3-004a-29d8-11389b0a0ef9",
			"headers": "",
			"url": "{{address}}/v1/services",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Provider 'kafka-rest111' does not exist.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1489390727061,
			"name": "Service_5.1.15.Provider_doesn't_exists",
			"description": "",
			"collectionId": "69c979e1-03b5-d5bd-1f61-ac88ec976ad5",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"rest-kafka1\",\r\n     \"description\": \"example kafka provider\",\r\n     \"provider\": \"kafka-rest111\",\r\n     \"zkProvider\": \"rest-zookeeper\",\r\n     \"type\": \"service.apache-kafka\",\r\n     \"zkNamespace\": \"a1\"\r\n}"
		},
		{
			"id": "6dc183cd-bc5b-f238-8926-273fec1d7c37",
			"headers": "",
			"url": "{{address}}/v1/services",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\" 'Provider' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1489390581069,
			"name": "Service_5.1.6.Empty_provider",
			"description": "",
			"collectionId": "69c979e1-03b5-d5bd-1f61-ac88ec976ad5",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"rest-kafka1\",\r\n     \"description\": \"example kafka provider\",\r\n     \"provider\": \"\",\r\n     \"zkProvider\": \"rest-zookeeper\",\r\n     \"type\": \"service.apache-kafka\",\r\n     \"zkNamespace\": \"a1\"\r\n}"
		},
		{
			"id": "7319cffe-41bc-280f-08b6-7a46239778ba",
			"headers": "",
			"url": "{{address}}/v1/services/rest-kafka",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Body matches string\"] = responseBody.has(\"Service 'rest-kafka' has been deleted\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493179233242,
			"name": "Service_5.3.1.Delete",
			"description": "",
			"collectionId": "69c979e1-03b5-d5bd-1f61-ac88ec976ad5",
			"responses": [],
			"rawModeData": ""
		},
		{
			"id": "752795d6-630f-ee77-98a5-7e075395304b",
			"headers": "",
			"headerData": [],
			"url": "{{address}}/v1/services",
			"queryParams": [],
			"preRequestScript": null,
			"pathVariables": {},
			"pathVariableData": [],
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Unknown type '1service.apache-kafka' of service provided. Must be one of: [service.elasticsearch, service.apache-kafka, service.t-streams, service.apache-zookeeper, service.sql-database, service.restful].\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1500607055333,
			"name": "Service_5.1.12.Unknown_type",
			"description": "",
			"collectionId": "69c979e1-03b5-d5bd-1f61-ac88ec976ad5",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"rest-kafka1\",\r\n     \"description\": \"example kafka provider\",\r\n     \"provider\": \"kafka-rest\",\r\n     \"zkProvider\": \"rest-zookeeper\",\r\n     \"type\": \"1service.apache-kafka\",\r\n     \"zkNamespace\": \"a1\"\r\n}"
		},
		{
			"id": "7d228447-7a6a-a6bb-5fcb-a8b25d7cb47f",
			"headers": "",
			"url": "{{address}}/v1/services",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\" 'Provider' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1489390567622,
			"name": "Service_5.1.20.Empty_provider(empty_string)",
			"description": "",
			"collectionId": "69c979e1-03b5-d5bd-1f61-ac88ec976ad5",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"rest-kafka1\",\r\n     \"description\": \"example kafka provider\",\r\n     \r\n     \"zkProvider\": \"rest-zookeeper\",\r\n     \"type\": \"service.apache-kafka\",\r\n     \"zkNamespace\": \"a1\"\r\n}"
		},
		{
			"id": "82d17caa-3d75-e8ad-ec0f-a8b45c1dbe1f",
			"headers": "",
			"url": "{{address}}/v1/services/rest-kafka/",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Body matches string\"] = responseBody.has(\"rest-kafka\");\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1495417763956,
			"name": "Service_5.2.1.Get_by_name",
			"description": "",
			"collectionId": "69c979e1-03b5-d5bd-1f61-ac88ec976ad5",
			"responses": [],
			"rawModeData": ""
		},
		{
			"id": "90f3c3bd-670c-8873-ec22-05cfb4770762",
			"headers": "",
			"headerData": [],
			"url": "{{address}}/v1/providers",
			"queryParams": [],
			"preRequestScript": null,
			"pathVariables": {},
			"pathVariableData": [],
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\ntests[\"Body matches string\"] = responseBody.has(\"Provider 'rest-jdbc' has been created.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1500607294295,
			"name": "Provider_7.1.1.Correct_data(Wrong_zKprovider)",
			"description": "",
			"collectionId": "69c979e1-03b5-d5bd-1f61-ac88ec976ad5",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"rest-jdbc\",\r\n     \"description\": \"example jdbc provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"provider.sql-database\",\r\n     \"driver\":\"mysql\",\r\n     \"hosts\": [\r\n        \"192.168.1.225:5432\"\r\n      ]\r\n}"
		},
		{
			"id": "a90acb5f-1204-f54b-d994-0b1000ba0c36",
			"headers": "",
			"headerData": [],
			"url": "{{address}}/v1/services",
			"queryParams": [],
			"preRequestScript": null,
			"pathVariables": {},
			"pathVariableData": [],
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Provider' must be of type: 'provider.apache-kafka' ('provider.sql-database' is given instead)\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1500607406342,
			"name": "Service_5.1.16.Wrong_provider",
			"description": "",
			"collectionId": "69c979e1-03b5-d5bd-1f61-ac88ec976ad5",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"rest-kafka1\",\r\n     \"description\": \"example kafka provider\",\r\n     \"provider\": \"rest-jdbc\",\r\n     \"zkProvider\": \"rest-zookeeper\",\r\n     \"type\": \"service.apache-kafka\",\r\n     \"zkNamespace\": \"a1\"\r\n}"
		},
		{
			"id": "abc39bda-6740-0f91-3370-58a3b0132a51",
			"headers": "",
			"headerData": [],
			"url": "{{address}}/v1/services",
			"queryParams": [],
			"preRequestScript": null,
			"pathVariables": {},
			"pathVariableData": [],
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Cannot parse json:\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1500607437685,
			"name": "Service_5.1.23.Wrong_JSON",
			"description": "",
			"collectionId": "69c979e1-03b5-d5bd-1f61-ac88ec976ad5",
			"responses": [],
			"rawModeData": "{\r\n     \"type\": \"\",\r\n     \"description\": \"\",\r\n     \"namespace\": \"\"\r\n     \"provider\": \"\"\r\n}"
		},
		{
			"id": "ac8f34d8-8e49-3112-3940-fa1f2d42cbc4",
			"headers": "",
			"url": "{{address}}/v1/services",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Name' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1489390328495,
			"name": "Service_5.1.18.Empty_name(empty_string)",
			"description": "",
			"collectionId": "69c979e1-03b5-d5bd-1f61-ac88ec976ad5",
			"responses": [],
			"rawModeData": "{\r\n\r\n     \"description\": \"example kafka provider\",\r\n     \"provider\": \"kafka-rest\",\r\n     \"zkProvider\": \"rest-zookeeper\",\r\n     \"type\": \"service.apache-kafka\",\r\n     \"zkNamespace\": \"a1\"\r\n}"
		},
		{
			"id": "b52810f3-d989-1d18-5fe2-6dfc47449327",
			"headers": "",
			"url": "{{address}}/v1/providers/rest-zookeeper",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Body matches string\"] = responseBody.has(\"Provider 'rest-zookeeper' has been deleted\" );",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1492487758416,
			"name": "Provider_5.4.1.Delete",
			"description": "",
			"collectionId": "69c979e1-03b5-d5bd-1f61-ac88ec976ad5",
			"responses": [],
			"rawModeData": ""
		},
		{
			"id": "b8d1e794-352d-f700-ac52-a13c00dc3cc6",
			"headers": "",
			"url": "{{address}}/v1/services",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Zookeeper provider 'rest-zookeeper1111' does not exist.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1489390680068,
			"name": "Service_5.1.13.Zk-provider_doesn't_exists",
			"description": "",
			"collectionId": "69c979e1-03b5-d5bd-1f61-ac88ec976ad5",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"rest-kafka1\",\r\n     \"description\": \"example kafka provider\",\r\n     \"provider\": \"kafka-rest\",\r\n     \"zkProvider\": \"rest-zookeeper1111\",\r\n     \"type\": \"service.apache-kafka\",\r\n     \"zkNamespace\": \"a1\"\r\n}"
		},
		{
			"id": "c4345748-18b2-5b43-64a6-daf30c9ad6f8",
			"headers": "",
			"url": "{{address}}/v1/providers/rest-jdbc",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "DELETE",
			"collectionId": "69c979e1-03b5-d5bd-1f61-ac88ec976ad5",
			"data": [],
			"dataMode": "raw",
			"name": "Provider_7.4.1.Delete(Wrong_provider)",
			"description": "",
			"descriptionFormat": "html",
			"time": 1493179017092,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Body matches string\"] = responseBody.has(\"Provider 'rest-jdbc' has been deleted\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": ""
		},
		{
			"id": "c52e9072-9b16-1660-8739-7ed74cdd95d7",
			"headers": "",
			"url": "{{address}}/v1/services",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'zkProvider' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1489390665893,
			"name": "Service_5.1.8.Empty_zk-provider",
			"description": "",
			"collectionId": "69c979e1-03b5-d5bd-1f61-ac88ec976ad5",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"rest-kafka1\",\r\n     \"description\": \"example kafka provider\",\r\n     \"provider\": \"kafka-rest\",\r\n     \"zkProvider\": \"\",\r\n     \"type\": \"service.apache-kafka\",\r\n     \"zkNamespace\": \"a1\"\r\n}"
		},
		{
			"id": "c8c4d136-9dcd-07af-f754-ab8926ad145b",
			"headers": "",
			"url": "{{address}}/v1/services/rest-kafka111",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "GET",
			"collectionId": "69c979e1-03b5-d5bd-1f61-ac88ec976ad5",
			"data": [],
			"dataMode": "raw",
			"name": "Service_5.2.4.Get_not_found",
			"description": "",
			"descriptionFormat": "html",
			"time": 1479870860658,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 404\"] = responseCode.code === 404;\n\ntests[\"Body matches string\"] = responseBody.has(\"Service 'rest-kafka111' has not been found.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": ""
		},
		{
			"id": "d2ef7713-fb7c-0bc2-6b92-67fc2ef9fe7e",
			"headers": "",
			"url": "{{address}}/v1/services",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Name' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1489390342247,
			"name": "Service_5.1.5.Empty_name",
			"description": "",
			"collectionId": "69c979e1-03b5-d5bd-1f61-ac88ec976ad5",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"\",\r\n     \"description\": \"example kafka provider\",\r\n     \"provider\": \"kafka-rest\",\r\n     \"zkProvider\": \"rest-zookeeper\",\r\n     \"type\": \"service.apache-kafka\",\r\n     \"zkNamespace\": \"a1\"\r\n}"
		},
		{
			"id": "dca2d1c3-a3ae-0275-4276-5a553ea8b744",
			"headers": "",
			"url": "{{address}}/v1/services",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Type' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1489390505054,
			"name": "Service_5.1.9.Empty_type",
			"description": "",
			"collectionId": "69c979e1-03b5-d5bd-1f61-ac88ec976ad5",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"rest-kafka1\",\r\n     \"description\": \"example kafka provider\",\r\n     \"provider\": \"kafka-rest\",\r\n     \"zkProvider\": \"rest-zookeeper\",\r\n     \"type\": \"\",\r\n     \"zkNamespace\": \"a1\"\r\n}"
		},
		{
			"id": "e0814d58-9787-544a-8765-30d13d103136",
			"headers": "",
			"url": "{{address}}/v1/services",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Service with name 'rest-kafka' already exists.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493177868206,
			"name": "Service_5.1.11.Already_exists",
			"description": "",
			"collectionId": "69c979e1-03b5-d5bd-1f61-ac88ec976ad5",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"rest-kafka\",\r\n     \"description\": \"example kafka provider\",\r\n     \"provider\": \"kafka-rest\",\r\n     \"zkProvider\": \"rest-zookeeper\",\r\n     \"type\": \"service.apache-kafka\",\r\n     \"zkNamespace\": \"a1\"\r\n}"
		},
		{
			"id": "e53e1004-2625-f756-fa83-8cbb5615c35e",
			"headers": "",
			"url": "{{address}}/v1/services",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "69c979e1-03b5-d5bd-1f61-ac88ec976ad5",
			"data": [],
			"dataMode": "raw",
			"name": "Service_4.1.24.Empty_JSON",
			"description": "",
			"descriptionFormat": "html",
			"time": 1495080059958,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Json deserialization error: 'Empty JSON'\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": ""
		},
		{
			"id": "ebd60464-5582-ca84-5f34-51d8ea0b9062",
			"headers": "",
			"url": "{{address}}/v1/services",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Service has incorrect 'zkNamespace': '1a1'. Name must contain digits, lowercase letters or underscore. First symbol must be a letter.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493177866358,
			"name": "Service_5.1.3.Wrong_zk-namespace",
			"description": "",
			"collectionId": "69c979e1-03b5-d5bd-1f61-ac88ec976ad5",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"rest-kafka\",\r\n     \"description\": \"example kafka provider\",\r\n     \"provider\": \"kafka-rest\",\r\n     \"zkProvider\": \"rest-zookeeper\",\r\n     \"type\": \"service.apache-kafka\",\r\n     \"zkNamespace\": \"1a1\"\r\n}"
		},
		{
			"id": "f2b950ca-df7b-d022-1280-f7e056776507",
			"headers": "",
			"url": "{{address}}/v1/providers/kafka-rest",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 422\"] = responseCode.code === 422;\n\ntests[\"Body matches string\"] = responseBody.has(\"Cannot delete provider 'kafka-rest'. Provider is used in services.\" );",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493182450340,
			"name": "Provider_4.4.2.Delete_provider_used_in_service",
			"description": "",
			"collectionId": "69c979e1-03b5-d5bd-1f61-ac88ec976ad5",
			"responses": [],
			"rawModeData": ""
		},
		{
			"id": "f9d229c7-7f8a-2ff1-1a16-3fbb04f9e142",
			"headers": "",
			"url": "{{address}}/v1/services/rest-kafka",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 404\"] = responseCode.code === 404;\n\ntests[\"Body matches string\"] = responseBody.has(\"Service 'rest-kafka' has not been found.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493179296201,
			"name": "Service_5.3.4.Delete_not_found",
			"description": "",
			"collectionId": "69c979e1-03b5-d5bd-1f61-ac88ec976ad5",
			"responses": [],
			"rawModeData": ""
		}
	]
}