{
	"id": "3828bd41-031e-cf26-e9ec-368dcd8106ea",
	"name": "JDBC Service",
	"description": "",
	"order": [
		"2ab11479-8141-c2ee-7f34-3684bf5c7d05",
		"a420cd4c-3f55-f04e-3ff2-60f133faa83a",
		"ca20dcfa-81db-5390-4004-8499ce4c981c",
		"be5aca57-5923-5e32-ce59-0eecec0e8b40",
		"b1351cc2-e527-a255-c6f0-8e2f66ea4ca7",
		"aa37ea9e-b7dc-585d-6d11-a77a0959112a",
		"05f8d7d5-c90c-6a0e-631e-1f8df41c333c",
		"ad23be5b-2644-4f86-253a-79ebd1940835",
		"6bb2970c-82af-5742-e12d-31699d48dfbf",
		"7c5340cf-9265-1604-a0d5-c38908e71921",
		"4f363042-111f-696a-7e53-b7612e84e923",
		"e95747a2-066c-3ea1-951c-7cd7c0a792fb",
		"2095e998-0d42-67df-9956-ccee2d4400f8",
		"abb1578a-9525-cea4-5a6d-295bc7ed1260",
		"95ab3065-9751-7a29-e792-c8db394fdcf7",
		"31a6a1d5-86a7-169d-b34d-00179ed0d30f",
		"f7be2e8e-0534-8814-4c63-eb520220e851",
		"9035769c-4cd9-d16f-fbe3-a9ede09e21f4",
		"f064d390-25dc-0ddf-ffaf-3bc91d735337",
		"1f38dd09-2d1e-0e16-359b-e06972b1b7c0",
		"32cee694-f09a-239a-295f-147143bfce1b",
		"8d650aa1-9c4e-9599-e5ed-4d07ff77b56b",
		"fbb3870b-109c-7b81-f3ae-1a2467cbf8b9",
		"b783ffc8-ba6b-7f8d-eab0-93e97706dce3",
		"03ad4f50-ccd2-4dc5-589c-67d01cf01855",
		"0e05b2af-4c82-d0cc-29ab-327e4a831ffb",
		"ceca5bc2-271b-6136-d8cf-5e279132760c",
		"ac8a5bf3-edc1-9504-3acb-20952d4149e3"
	],
	"folders": [],
	"folders_order": [],
	"timestamp": 1489118162500,
	"owner": "2484921",
	"public": false,
	"requests": [
		{
			"id": "03ad4f50-ccd2-4dc5-589c-67d01cf01855",
			"headers": "",
			"url": "{{address}}/v1/services/restjdbc",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "GET",
			"collectionId": "3828bd41-031e-cf26-e9ec-368dcd8106ea",
			"data": [],
			"dataMode": "raw",
			"name": "Service_8.3.6.Get_deleted_service",
			"description": "",
			"descriptionFormat": "html",
			"time": 1489120289733,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 404;\n\ntests[\"Body matches string\"] = responseBody.has(\"Service 'restjdbc' has not been found.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "",
			"collection_id": "3828bd41-031e-cf26-e9ec-368dcd8106ea"
		},
		{
			"id": "05f8d7d5-c90c-6a0e-631e-1f8df41c333c",
			"headers": "",
			"headerData": [],
			"url": "{{address}}/v1/services",
			"queryParams": [],
			"preRequestScript": null,
			"pathVariables": {},
			"pathVariableData": [],
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Unknown type '1service.sql-database' of service provided. Must be one of: [service.elasticsearch, service.apache-kafka, service.t-streams, service.apache-zookeeper, service.sql-database, service.restful]\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1500604113226,
			"name": "Service_8.1.15.Type_doesn't_exist",
			"description": "",
			"collectionId": "3828bd41-031e-cf26-e9ec-368dcd8106ea",
			"responses": [],
			"rawModeData": "{\r\n     \"type\": \"1service.sql-database\",\r\n     \"name\": \"restjdbc\",\r\n     \"description\": \"jdbc\",\r\n     \"database\": \"a1\",\r\n     \"provider\": \"rest-jdbc\",\r\n     \"driver\":\"mysql\"\r\n}",
			"collection_id": "3828bd41-031e-cf26-e9ec-368dcd8106ea"
		},
		{
			"id": "0e05b2af-4c82-d0cc-29ab-327e4a831ffb",
			"headers": "",
			"url": "{{address}}/v1/services/restjdbc",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 404\"] = responseCode.code === 404;\n\ntests[\"Body matches string\"] = responseBody.has(\"Service 'restjdbc' has not been found.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493182614522,
			"name": "Service_8.3.4.Delete_not_found",
			"description": "",
			"collectionId": "3828bd41-031e-cf26-e9ec-368dcd8106ea",
			"responses": [],
			"rawModeData": "",
			"collection_id": "3828bd41-031e-cf26-e9ec-368dcd8106ea"
		},
		{
			"id": "1f38dd09-2d1e-0e16-359b-e06972b1b7c0",
			"headers": "",
			"headerData": [],
			"url": "{{address}}/v1/services/restjdbc",
			"queryParams": [],
			"preRequestScript": null,
			"pathVariables": {},
			"pathVariableData": [],
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Body matches string\"] = responseBody.has(\"restjdbc\");\n\ntests[\"Body matches string\"] = responseBody.has(\"service.sql-database\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1500606272117,
			"name": "Service_8.2.1.Get_by_name",
			"description": "",
			"collectionId": "3828bd41-031e-cf26-e9ec-368dcd8106ea",
			"responses": [],
			"rawModeData": "",
			"collection_id": "3828bd41-031e-cf26-e9ec-368dcd8106ea"
		},
		{
			"id": "2095e998-0d42-67df-9956-ccee2d4400f8",
			"headers": "",
			"url": "{{address}}/v1/providers/kafka-rest",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "DELETE",
			"collectionId": "3828bd41-031e-cf26-e9ec-368dcd8106ea",
			"data": [],
			"dataMode": "raw",
			"name": "Provider_4.4.1.Delete(Provider_wrong_type)",
			"description": "",
			"descriptionFormat": "html",
			"time": 1493182798723,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Body matches string\"] = responseBody.has(\"Provider 'kafka-rest' has been deleted\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "",
			"collection_id": "3828bd41-031e-cf26-e9ec-368dcd8106ea"
		},
		{
			"id": "2ab11479-8141-c2ee-7f34-3684bf5c7d05",
			"headers": "",
			"headerData": [],
			"url": "{{address}}/v1/providers",
			"queryParams": [],
			"preRequestScript": null,
			"pathVariables": {},
			"pathVariableData": [],
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\ntests[\"Body matches string\"] = responseBody.has(\"Provider 'rest-jdbc' has been created.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1500540047712,
			"name": "Provider_7.1.1.Correct_data",
			"description": "",
			"collectionId": "3828bd41-031e-cf26-e9ec-368dcd8106ea",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"rest-jdbc\",\r\n     \"description\": \"example jdbc provider\",\r\n     \"login\": \"admin\",\r\n     \"password\": \"admin\",\r\n     \"type\": \"provider.sql-database\",\r\n     \"driver\":\"mysql\",\r\n     \"hosts\": [\r\n        \"{{mysql-address}}\"\r\n      ]\r\n}",
			"collection_id": "3828bd41-031e-cf26-e9ec-368dcd8106ea"
		},
		{
			"id": "31a6a1d5-86a7-169d-b34d-00179ed0d30f",
			"headers": "",
			"headerData": [],
			"url": "{{address}}/v1/services",
			"queryParams": [],
			"preRequestScript": null,
			"pathVariables": {},
			"pathVariableData": [],
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Cannot parse json:\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1500605940851,
			"name": "Service_8.1.22.Wrong_JSON",
			"description": "",
			"collectionId": "3828bd41-031e-cf26-e9ec-368dcd8106ea",
			"responses": [],
			"rawModeData": "{\r\n     \"type\": \"\",\r\n     \"description\": \"\",\r\n     \"namespace\": \"\"\r\n     \"provider\": \"\"\r\n}",
			"collection_id": "3828bd41-031e-cf26-e9ec-368dcd8106ea"
		},
		{
			"id": "32cee694-f09a-239a-295f-147143bfce1b",
			"headers": "",
			"url": "{{address}}/v1/services/restjdbc111",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "GET",
			"collectionId": "3828bd41-031e-cf26-e9ec-368dcd8106ea",
			"data": [],
			"dataMode": "raw",
			"name": "Service_8.2.5.Get_not_found",
			"description": "",
			"descriptionFormat": "html",
			"time": 1489120253756,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 404\"] = responseCode.code === 404;\n\ntests[\"Body matches string\"] = responseBody.has(\"Service 'restjdbc111' has not been found.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "",
			"collection_id": "3828bd41-031e-cf26-e9ec-368dcd8106ea"
		},
		{
			"id": "4f363042-111f-696a-7e53-b7612e84e923",
			"headers": "",
			"url": "{{address}}/v1/providers",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "3828bd41-031e-cf26-e9ec-368dcd8106ea",
			"data": [],
			"dataMode": "raw",
			"name": "Provider_4.1.1.Correct_data(Provider_wrong_type)",
			"description": "",
			"descriptionFormat": "html",
			"time": 1493182790554,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\ntests[\"Body matches string\"] = responseBody.has(\"Provider 'kafka-rest' has been created.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n     \"name\": \"kafka-rest\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"provider.apache-kafka\",\r\n     \"hosts\": [\r\n        \"{{kafka-address}}\"\r\n      ]\r\n}",
			"collection_id": "3828bd41-031e-cf26-e9ec-368dcd8106ea"
		},
		{
			"id": "6bb2970c-82af-5742-e12d-31699d48dfbf",
			"headers": "",
			"url": "{{address}}/v1/services",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Provider' attribute is required\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493268545397,
			"name": "Service_8.1.171Empty_provider(empty_string)",
			"description": "",
			"collectionId": "3828bd41-031e-cf26-e9ec-368dcd8106ea",
			"responses": [],
			"rawModeData": "{\r\n     \"type\": \"service.sql-database\",\r\n     \"name\": \"restjdbc1\",\r\n     \"description\": \"jdbc\",\r\n     \"database\": \"a1\",\r\n   \r\n     \"driver\":\"mysql\"\r\n}",
			"collection_id": "3828bd41-031e-cf26-e9ec-368dcd8106ea"
		},
		{
			"id": "7c5340cf-9265-1604-a0d5-c38908e71921",
			"headers": "",
			"url": "{{address}}/v1/services",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Provider 'rest-jdbc1111' does not exist.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493268547757,
			"name": "Service_8.1.12.Provider_doesn't_exists",
			"description": "",
			"collectionId": "3828bd41-031e-cf26-e9ec-368dcd8106ea",
			"responses": [],
			"rawModeData": "{\r\n     \"type\": \"service.sql-database\",\r\n     \"name\": \"restjdbc1\",\r\n     \"description\": \"jdbc\",\r\n     \"database\": \"a1\",\r\n     \"provider\": \"rest-jdbc1111\",\r\n     \"driver\":\"mysql\"\r\n}",
			"collection_id": "3828bd41-031e-cf26-e9ec-368dcd8106ea"
		},
		{
			"id": "8d650aa1-9c4e-9599-e5ed-4d07ff77b56b",
			"headers": "",
			"url": "{{address}}/v1/providers/rest-jdbc",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 422\"] = responseCode.code === 422;\n\ntests[\"Body matches string\"] = responseBody.has(\"Cannot delete provider 'rest-jdbc'. Provider is used in services.\" );",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1491360485357,
			"name": "Provider_7.4.2.Delete_provider_used_in_service",
			"description": "",
			"collectionId": "3828bd41-031e-cf26-e9ec-368dcd8106ea",
			"responses": [],
			"rawModeData": "",
			"collection_id": "3828bd41-031e-cf26-e9ec-368dcd8106ea"
		},
		{
			"id": "9035769c-4cd9-d16f-fbe3-a9ede09e21f4",
			"headers": "",
			"url": "{{address}}/v1/services",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Body matches string\"] = responseBody.has(\"Service 'restjdbc' has been created.\");\n\ntests[\"Status code is 201\"] = responseCode.code === 201;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493865348672,
			"name": "Service_8.1.1.Correct_data",
			"description": "",
			"collectionId": "3828bd41-031e-cf26-e9ec-368dcd8106ea",
			"responses": [],
			"rawModeData": "{\r\n     \"type\": \"service.sql-database\",\r\n     \"name\": \"restjdbc\",\r\n     \"description\": \"jdbc\",\r\n     \"database\": \"test_database_for_output_engine\",\r\n     \"provider\": \"rest-jdbc\",\r\n     \"driver\":\"mysql\"\r\n}",
			"collection_id": "3828bd41-031e-cf26-e9ec-368dcd8106ea"
		},
		{
			"id": "95ab3065-9751-7a29-e792-c8db394fdcf7",
			"headers": "",
			"headerData": [],
			"url": "{{address}}/v1/services",
			"queryParams": [],
			"preRequestScript": null,
			"pathVariables": {},
			"pathVariableData": [],
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Cannot create service. Errors: Service has incorrect database name: '1111'. Name must contain digits, lowercase letters or underscore. First symbol must be a letter.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1509434788799,
			"name": "Service_8.1.16.Database_1111",
			"description": "",
			"collectionId": "3828bd41-031e-cf26-e9ec-368dcd8106ea",
			"responses": [],
			"rawModeData": "{\r\n     \"type\": \"service.sql-database\",\r\n     \"name\": \"restjdbc1\",\r\n     \"description\": \"jdbc\",\r\n     \"database\": \"1111\",\r\n     \"provider\": \"rest-jdbc\"\r\n}"
		},
		{
			"id": "a420cd4c-3f55-f04e-3ff2-60f133faa83a",
			"headers": "",
			"headerData": [],
			"url": "{{address}}/v1/services",
			"queryParams": [],
			"preRequestScript": null,
			"pathVariables": {},
			"pathVariableData": [],
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Service has incorrect name: '1rest-jdbc'. Name of service must contain digits, lowercase letters or hyphens. First symbol must be a letter\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1497923080125,
			"name": "Service_8.1.2.Wrong_name",
			"description": "",
			"collectionId": "3828bd41-031e-cf26-e9ec-368dcd8106ea",
			"responses": [],
			"rawModeData": "{\r\n     \"type\": \"service.sql-database\",\r\n     \"name\": \"1rest-jdbc\",\r\n     \"description\": \"jdbc\",\r\n     \"database\": \"a1\",\r\n     \"provider\": \"rest-jdbc\",\r\n     \"driver\":\"mysql\"\r\n}",
			"collection_id": "3828bd41-031e-cf26-e9ec-368dcd8106ea"
		},
		{
			"id": "aa37ea9e-b7dc-585d-6d11-a77a0959112a",
			"headers": "",
			"url": "{{address}}/v1/services",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Type' attribute is required\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493268539677,
			"name": "Service_8.1.18.Type_empty(empty_string)",
			"description": "",
			"collectionId": "3828bd41-031e-cf26-e9ec-368dcd8106ea",
			"responses": [],
			"rawModeData": "{\r\n     \r\n     \"name\": \"restjdbc\",\r\n     \"description\": \"jdbc\",\r\n     \"database\": \"a1\",\r\n     \"provider\": \"rest-jdbc\",\r\n     \"driver\":\"mysql\"\r\n}",
			"collection_id": "3828bd41-031e-cf26-e9ec-368dcd8106ea"
		},
		{
			"id": "abb1578a-9525-cea4-5a6d-295bc7ed1260",
			"headers": "",
			"url": "{{address}}/v1/services",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Database' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493268564557,
			"name": "Service_8.1.9.Database_empty",
			"description": "",
			"collectionId": "3828bd41-031e-cf26-e9ec-368dcd8106ea",
			"responses": [],
			"rawModeData": "{\r\n     \"type\": \"service.sql-database\",\r\n     \"name\": \"restjdbc1\",\r\n     \"description\": \"jdbc\",\r\n     \"database\": \"\",\r\n     \"provider\": \"good-es\",\r\n     \"driver\":\"mysql\"\r\n}",
			"collection_id": "3828bd41-031e-cf26-e9ec-368dcd8106ea"
		},
		{
			"id": "ac8a5bf3-edc1-9504-3acb-20952d4149e3",
			"headers": "",
			"headerData": [],
			"url": "{{address}}/v1/services",
			"queryParams": [],
			"preRequestScript": null,
			"pathVariables": {},
			"pathVariableData": [],
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Cannot parse json:\");",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1500605940851,
			"name": "Service_8.1.22.Wrong_JSON copy",
			"description": "",
			"collectionId": "3828bd41-031e-cf26-e9ec-368dcd8106ea",
			"responses": [],
			"rawModeData": "{\r\n     \"type\": \"\",\r\n     \"description\": \"\",\r\n     \"namespace\": \"\"\r\n     \"provider\": \"\"\r\n}",
			"collection_id": "3828bd41-031e-cf26-e9ec-368dcd8106ea",
			"isFromCollection": true,
			"collectionRequestId": "31a6a1d5-86a7-169d-b34d-00179ed0d30f"
		},
		{
			"id": "ad23be5b-2644-4f86-253a-79ebd1940835",
			"headers": "",
			"url": "{{address}}/v1/services",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Provider' attribute is required\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493268543477,
			"name": "Service_8.1.7.Empty_provider",
			"description": "",
			"collectionId": "3828bd41-031e-cf26-e9ec-368dcd8106ea",
			"responses": [],
			"rawModeData": "{\r\n     \"type\": \"service.sql-database\",\r\n     \"name\": \"restjdbc1\",\r\n     \"description\": \"jdbc\",\r\n     \"database\": \"a1\",\r\n     \"provider\": \"\",\r\n     \"driver\":\"mysql\"\r\n}",
			"collection_id": "3828bd41-031e-cf26-e9ec-368dcd8106ea"
		},
		{
			"id": "b1351cc2-e527-a255-c6f0-8e2f66ea4ca7",
			"headers": "",
			"url": "{{address}}/v1/services",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Type' attribute is required\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493268537526,
			"name": "Service_8.1.5.Type_empty",
			"description": "",
			"collectionId": "3828bd41-031e-cf26-e9ec-368dcd8106ea",
			"responses": [],
			"rawModeData": "{\r\n     \"type\": \"\",\r\n     \"name\": \"restjdbc\",\r\n     \"description\": \"jdbc\",\r\n     \"database\": \"a1\",\r\n     \"provider\": \"rest-jdbc\",\r\n     \"driver\":\"mysql\"\r\n}",
			"collection_id": "3828bd41-031e-cf26-e9ec-368dcd8106ea"
		},
		{
			"id": "b783ffc8-ba6b-7f8d-eab0-93e97706dce3",
			"headers": "",
			"url": "{{address}}/v1/services/restjdbc",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Body matches string\"] = responseBody.has(\"Service 'restjdbc' has been deleted\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493182610122,
			"name": "Service_8.3.1.Delete",
			"description": "",
			"collectionId": "3828bd41-031e-cf26-e9ec-368dcd8106ea",
			"responses": [],
			"rawModeData": "",
			"collection_id": "3828bd41-031e-cf26-e9ec-368dcd8106ea"
		},
		{
			"id": "be5aca57-5923-5e32-ce59-0eecec0e8b40",
			"headers": "",
			"url": "{{address}}/v1/services",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Name' attribute is required\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493865366623,
			"name": "Service_8.1.11.Empty_name(empty_string)",
			"description": "",
			"collectionId": "3828bd41-031e-cf26-e9ec-368dcd8106ea",
			"responses": [],
			"rawModeData": "{\r\n     \"type\": \"service.sql-database\",\r\n     \r\n     \"description\": \"jdbc\",\r\n     \"database\": \"a1\",\r\n     \"provider\": \"rest-jdbc\",\r\n     \"driver\":\"mysql\"\r\n}",
			"collection_id": "3828bd41-031e-cf26-e9ec-368dcd8106ea"
		},
		{
			"id": "ca20dcfa-81db-5390-4004-8499ce4c981c",
			"headers": "",
			"url": "{{address}}/v1/services",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Name' attribute is required\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493865320577,
			"name": "Service_8.1.6.Empty_name",
			"description": "",
			"collectionId": "3828bd41-031e-cf26-e9ec-368dcd8106ea",
			"responses": [],
			"rawModeData": "{\r\n     \"type\": \"service.sql-database\",\r\n     \"name\": \"\",\r\n     \"description\": \"jdbc\",\r\n     \"database\": \"test\",\r\n     \"provider\": \"rest-jdbc\",\r\n     \"driver\":\"mysql\"\r\n}",
			"collection_id": "3828bd41-031e-cf26-e9ec-368dcd8106ea"
		},
		{
			"id": "ceca5bc2-271b-6136-d8cf-5e279132760c",
			"headers": "",
			"url": "{{address}}/v1/providers/rest-jdbc",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Body matches string\"] = responseBody.has(\"Provider 'rest-jdbc' has been deleted\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493179007245,
			"name": "Provider_7.4.1.Delete",
			"description": "",
			"collectionId": "3828bd41-031e-cf26-e9ec-368dcd8106ea",
			"responses": [],
			"rawModeData": "",
			"collection_id": "3828bd41-031e-cf26-e9ec-368dcd8106ea"
		},
		{
			"id": "e95747a2-066c-3ea1-951c-7cd7c0a792fb",
			"headers": "",
			"headerData": [],
			"url": "{{address}}/v1/services",
			"queryParams": [],
			"preRequestScript": null,
			"pathVariables": {},
			"pathVariableData": [],
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Provider' must be of type: 'provider.sql-database' ('provider.apache-kafka' is given instead).\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1500605926493,
			"name": "Service_8.1.19.Provider_wrong_type",
			"description": "",
			"collectionId": "3828bd41-031e-cf26-e9ec-368dcd8106ea",
			"responses": [],
			"rawModeData": "{\r\n     \"type\": \"service.sql-database\",\r\n     \"name\": \"restjdbc1\",\r\n     \"description\": \"jdbc\",\r\n     \"database\": \"a1\",\r\n     \"provider\": \"kafka-rest\",\r\n     \"driver\":\"mysql\"\r\n}",
			"collection_id": "3828bd41-031e-cf26-e9ec-368dcd8106ea"
		},
		{
			"id": "f064d390-25dc-0ddf-ffaf-3bc91d735337",
			"headers": "",
			"url": "{{address}}/v1/services",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Service with name 'restjdbc' already exists.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493268575141,
			"name": "Service_8.1.10.Already_exists",
			"description": "",
			"collectionId": "3828bd41-031e-cf26-e9ec-368dcd8106ea",
			"responses": [],
			"rawModeData": "{\r\n     \"type\": \"service.sql-database\",\r\n     \"name\": \"restjdbc\",\r\n     \"description\": \"jdbc\",\r\n     \"database\": \"a1\",\r\n     \"provider\": \"rest-jdbc\",\r\n     \"driver\":\"mysql\"\r\n}",
			"collection_id": "3828bd41-031e-cf26-e9ec-368dcd8106ea"
		},
		{
			"id": "f7be2e8e-0534-8814-4c63-eb520220e851",
			"headers": "",
			"url": "{{address}}/v1/services",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "3828bd41-031e-cf26-e9ec-368dcd8106ea",
			"data": [],
			"dataMode": "raw",
			"name": "Service_8.1.23.Empty_JSON",
			"description": "",
			"descriptionFormat": "html",
			"time": 1495080003294,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Json deserialization error: 'Empty JSON'\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "",
			"collection_id": "3828bd41-031e-cf26-e9ec-368dcd8106ea"
		},
		{
			"id": "fbb3870b-109c-7b81-f3ae-1a2467cbf8b9",
			"headers": "",
			"url": "{{address}}/v1/providers/rest-jdbc/related",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Body matches string\"] = responseBody.has(\"restjdbc\");\n\n\ntests[\"Body matches string\"] = responseBody.has(\"services\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493866109009,
			"name": "Provider_8.2.7.Related",
			"description": "",
			"collectionId": "3828bd41-031e-cf26-e9ec-368dcd8106ea",
			"responses": [],
			"rawModeData": "",
			"collection_id": "3828bd41-031e-cf26-e9ec-368dcd8106ea"
		}
	]
}