{
	"id": "7176e505-2c63-713f-32f3-43f95b30fb48",
	"name": "Kafka Service",
	"description": "",
	"order": [
		"3ac77cdf-8522-e5ab-5cc2-59fe7780642f",
		"cb585618-021a-10d6-01e3-13a8c279e8d4",
		"2dc32d98-aa1a-1a39-b04b-549ccc0759c1",
		"0135a817-625b-f4fb-15f9-1b09075158ef",
		"69ceb4b1-a5df-46a2-63de-1ce7eea02724",
		"da67a017-fa38-63b4-0897-4c40f6131495",
		"82d36cc2-fc2b-f302-2840-74f1b91f50f1",
		"8d908d58-79b7-21e2-f1b2-6070d1052f3c",
		"670bdbb0-0e78-b814-2355-fdae34ac01dd",
		"f5c0cb84-f424-0bca-5afd-bfc6238e2dc9",
		"9fae2eff-dff9-471c-6882-2017b91385d7",
		"46583b05-1a28-b862-71ac-f6004cd7df1c",
		"baa1ec2f-3ec6-8538-d98f-95c5cd91ab5b",
		"25421cb3-6c12-a8a7-778a-ef93770aab13",
		"6b418354-d3f1-c28a-0a82-5714964a456d",
		"fa6189a7-3dbc-ce13-1b98-45529dcc8670",
		"f38a018c-50e5-c29d-000d-2df1d736b82a",
		"63acca37-c06e-3b0d-702e-7f4765b02ee5",
		"884ae950-2e0f-cad9-5dbf-c0b2db2b9996",
		"022bdd16-5029-c473-6d06-423b989d4570",
		"09d05b79-1090-56d0-3272-f8a81c860734",
		"2ee57b60-538d-1701-843f-4d8b54a2da8a",
		"60a8a271-bf33-d525-5238-dc8965694a72",
		"a59add6c-ee16-756f-2a47-7b7d349b2a91",
		"5c45a55c-15e4-37ee-8b44-9baba5f74aba",
		"c2d0aa01-3bed-f6eb-10cd-e0f1dfcc7ed0",
		"0426d801-d54f-775b-f64a-2077689b99b6",
		"9b57f05a-58e7-a359-9ce4-09c22806eb35",
		"74345d6a-239e-0e16-c292-7937c23fd34a",
		"9b9e0911-7218-bfe1-1da9-aab14e47dd9d",
		"33d3e0a0-9db5-4d0e-34d4-3195bd623206",
		"9dce1682-512d-7d13-7ce1-ca3c05be1877",
		"23e5c875-c4a0-d953-94a2-0e56987aa900",
		"e96dec22-2662-ed9b-a16f-0648ea271d6b",
		"256bd402-ab17-bdc0-9220-c1b6f134e3ad",
		"6d9382f7-567c-402a-93ff-c5a201eff21a",
		"fde65e90-01e4-af5f-0da9-6f3965d7b1ad"
	],
	"folders": [],
	"timestamp": 1479797735351,
	"owner": 0,
	"public": false,
	"hasRequests": true,
	"requests": [
		{
			"id": "0135a817-625b-f4fb-15f9-1b09075158ef",
			"headers": "",
			"url": "{{address}}/v1/services",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Service has incorrect 'zkNamespace': '1a1'. Name must contain digits, lowercase letters or underscore. First symbol must be a letter.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493177866358,
			"name": "Service_5.1.3.Wrong_zk-namespace",
			"description": "",
			"collectionId": "7176e505-2c63-713f-32f3-43f95b30fb48",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"rest-kafka\",\r\n     \"description\": \"example kafka provider\",\r\n     \"provider\": \"kafka-rest\",\r\n     \"zkProvider\": \"rest-zookeeper\",\r\n     \"type\": \"KfkQ\",\r\n     \"zkNamespace\": \"1a1\"\r\n}"
		},
		{
			"id": "022bdd16-5029-c473-6d06-423b989d4570",
			"headers": "",
			"url": "{{address}}/v1/services",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Provider 'kafka-rest111' does not exist.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1489390727061,
			"name": "Service_5.1.15.Provider_doesn't_exists",
			"description": "",
			"collectionId": "7176e505-2c63-713f-32f3-43f95b30fb48",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"rest-kafka1\",\r\n     \"description\": \"example kafka provider\",\r\n     \"provider\": \"kafka-rest111\",\r\n     \"zkProvider\": \"rest-zookeeper\",\r\n     \"type\": \"KfkQ\",\r\n     \"zkNamespace\": \"a1\"\r\n}"
		},
		{
			"id": "0426d801-d54f-775b-f64a-2077689b99b6",
			"headers": "",
			"url": "{{address}}/v1/services",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Service with name 'rest-kafka' already exists.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493177868206,
			"name": "Service_5.1.11.Already_exists",
			"description": "",
			"collectionId": "7176e505-2c63-713f-32f3-43f95b30fb48",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"rest-kafka\",\r\n     \"description\": \"example kafka provider\",\r\n     \"provider\": \"kafka-rest\",\r\n     \"zkProvider\": \"rest-zookeeper\",\r\n     \"type\": \"KfkQ\",\r\n     \"zkNamespace\": \"a1\"\r\n}"
		},
		{
			"id": "09d05b79-1090-56d0-3272-f8a81c860734",
			"headers": "",
			"url": "{{address}}/v1/providers",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\ntests[\"Body matches string\"] = responseBody.has(\"Provider 'rest-jdbc' has been created.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493866448101,
			"name": "Provider_7.1.1.Correct_data(Wrong_provider)",
			"description": "",
			"collectionId": "7176e505-2c63-713f-32f3-43f95b30fb48",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"rest-jdbc\",\r\n     \"description\": \"example jdbc provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"JDBC\",\r\n     \"driver\":\"mysql\",\r\n     \"hosts\": [\r\n        \"192.168.1.225:5432\"\r\n      ]\r\n}"
		},
		{
			"id": "23e5c875-c4a0-d953-94a2-0e56987aa900",
			"headers": "",
			"url": "{{address}}/v1/services/rest-kafka",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Body matches string\"] = responseBody.has(\"Service 'rest-kafka' has been deleted\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493179233242,
			"name": "Service_5.3.1.Delete",
			"description": "",
			"collectionId": "7176e505-2c63-713f-32f3-43f95b30fb48",
			"responses": [],
			"rawModeData": ""
		},
		{
			"id": "25421cb3-6c12-a8a7-778a-ef93770aab13",
			"headers": "",
			"url": "{{address}}/v1/services",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'zkProvider' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1489390645348,
			"name": "Service_5.1.22.Empty_zk-provider(empty_string)",
			"description": "",
			"collectionId": "7176e505-2c63-713f-32f3-43f95b30fb48",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"rest-kafka1\",\r\n     \"description\": \"example kafka provider\",\r\n     \"provider\": \"kafka-rest\",\r\n\r\n     \"type\": \"KfkQ\",\r\n     \"zkNamespace\": \"a1\"\r\n}"
		},
		{
			"id": "256bd402-ab17-bdc0-9220-c1b6f134e3ad",
			"headers": "",
			"url": "{{address}}/v1/services/rest-kafka",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 404\"] = responseCode.code === 404;\n\ntests[\"Body matches string\"] = responseBody.has(\"Service 'rest-kafka' has not been found.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493179296201,
			"name": "Service_5.3.4.Delete_not_found",
			"description": "",
			"collectionId": "7176e505-2c63-713f-32f3-43f95b30fb48",
			"responses": [],
			"rawModeData": ""
		},
		{
			"id": "2dc32d98-aa1a-1a39-b04b-549ccc0759c1",
			"headers": "",
			"url": "{{address}}/v1/services",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Service has incorrect name: '1rest-kafka'. Name of service must contain digits, lowercase letters or hyphens. First symbol must be a letter.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493177863781,
			"name": "Service_5.1.2.Wrong_name",
			"description": "",
			"collectionId": "7176e505-2c63-713f-32f3-43f95b30fb48",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"1rest-kafka\",\r\n     \"description\": \"example kafka provider\",\r\n     \"provider\": \"kafka-rest\",\r\n     \"zkProvider\": \"rest-zookeeper\",\r\n     \"type\": \"KfkQ\",\r\n     \"zkNamespace\": \"a1\"\r\n}"
		},
		{
			"id": "2ee57b60-538d-1701-843f-4d8b54a2da8a",
			"headers": "",
			"url": "{{address}}/v1/services",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Provider' must be of type: 'kafka' ('JDBC' is given instead)\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493866491819,
			"name": "Service_5.1.16.Wrong_provider",
			"description": "",
			"collectionId": "7176e505-2c63-713f-32f3-43f95b30fb48",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"rest-kafka1\",\r\n     \"description\": \"example kafka provider\",\r\n     \"provider\": \"rest-jdbc\",\r\n     \"zkProvider\": \"rest-zookeeper\",\r\n     \"type\": \"KfkQ\",\r\n     \"zkNamespace\": \"a1\"\r\n}"
		},
		{
			"id": "33d3e0a0-9db5-4d0e-34d4-3195bd623206",
			"headers": "",
			"url": "{{address}}/v1/providers/rest-zookeeper",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 422\"] = responseCode.code === 422;\n\ntests[\"Body matches string\"] = responseBody.has(\"Cannot delete provider 'rest-zookeeper'. Provider is used in services.\" );",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1492487745192,
			"name": "Provider_5.4.2.Delete_provider_used_in_service.",
			"description": "",
			"collectionId": "7176e505-2c63-713f-32f3-43f95b30fb48",
			"responses": [],
			"rawModeData": "",
			"isFromCollection": true
		},
		{
			"id": "3ac77cdf-8522-e5ab-5cc2-59fe7780642f",
			"headers": "",
			"url": "{{address}}/v1/providers",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\ntests[\"Body matches string\"] = responseBody.has(\"Provider 'kafka-rest' has been created.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493177852302,
			"name": "Provider_4.1.1.Correct_data",
			"description": "",
			"collectionId": "7176e505-2c63-713f-32f3-43f95b30fb48",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"kafka-rest\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"kafka\",\r\n     \"hosts\": [\r\n        \"176.120.25.19:9092\"\r\n      ]\r\n}"
		},
		{
			"id": "46583b05-1a28-b862-71ac-f6004cd7df1c",
			"headers": "",
			"url": "{{address}}/v1/services",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'zkNamespace' attribute is required\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1489390219096,
			"name": "Service_5.1.21.Empty_zk-namespace (empty_string)",
			"description": "",
			"collectionId": "7176e505-2c63-713f-32f3-43f95b30fb48",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"rest-kafka1\",\r\n     \"description\": \"example kafka provider\",\r\n     \"provider\": \"kafka-rest\",\r\n     \"zkProvider\": \"rest-zookeeper\",\r\n     \"type\": \"KfkQ\"\r\n}"
		},
		{
			"id": "5c45a55c-15e4-37ee-8b44-9baba5f74aba",
			"headers": "",
			"url": "{{address}}/v1/services",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "7176e505-2c63-713f-32f3-43f95b30fb48",
			"data": [],
			"dataMode": "raw",
			"name": "Service_4.1.24.Empty_JSON",
			"description": "",
			"descriptionFormat": "html",
			"time": 1495080059958,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Json deserialization error: 'Empty JSON'\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": ""
		},
		{
			"id": "60a8a271-bf33-d525-5238-dc8965694a72",
			"headers": "",
			"url": "{{address}}/v1/providers/rest-jdbc",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "DELETE",
			"collectionId": "7176e505-2c63-713f-32f3-43f95b30fb48",
			"data": [],
			"dataMode": "raw",
			"name": "Provider_7.4.1.Delete(Wrong_provider)",
			"description": "",
			"descriptionFormat": "html",
			"time": 1493179017092,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Body matches string\"] = responseBody.has(\"Provider 'rest-jdbc' has been deleted\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": ""
		},
		{
			"id": "63acca37-c06e-3b0d-702e-7f4765b02ee5",
			"headers": "",
			"url": "{{address}}/v1/services",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'zkProvider' must be of type: 'zookeeper' ('JDBC' is given instead).\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493866390079,
			"name": "Service_5.1.14.Zk-provider_wrong_type",
			"description": "",
			"collectionId": "7176e505-2c63-713f-32f3-43f95b30fb48",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"rest-kafka1\",\r\n     \"description\": \"example kafka provider\",\r\n     \"provider\": \"kafka-rest\",\r\n     \"zkProvider\": \"rest-jdbc\",\r\n     \"type\": \"KfkQ\",\r\n     \"zkNamespace\": \"a1\"\r\n}"
		},
		{
			"id": "670bdbb0-0e78-b814-2355-fdae34ac01dd",
			"headers": "",
			"url": "{{address}}/v1/services",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Unknown type 'KfkQ111' of service provided. Must be one of: [CassDB, ESInd, KfkQ, TstrQ, ZKCoord, ArspkDB, JDBC, REST].\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1494908993973,
			"name": "Service_5.1.12.Unknown_type",
			"description": "",
			"collectionId": "7176e505-2c63-713f-32f3-43f95b30fb48",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"rest-kafka1\",\r\n     \"description\": \"example kafka provider\",\r\n     \"provider\": \"kafka-rest\",\r\n     \"zkProvider\": \"rest-zookeeper\",\r\n     \"type\": \"KfkQ111\",\r\n     \"zkNamespace\": \"a1\"\r\n}"
		},
		{
			"id": "69ceb4b1-a5df-46a2-63de-1ce7eea02724",
			"headers": "",
			"url": "{{address}}/v1/services",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Name' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1489390328495,
			"name": "Service_5.1.18.Empty_name(empty_string)",
			"description": "",
			"collectionId": "7176e505-2c63-713f-32f3-43f95b30fb48",
			"responses": [],
			"rawModeData": "{\r\n\r\n     \"description\": \"example kafka provider\",\r\n     \"provider\": \"kafka-rest\",\r\n     \"zkProvider\": \"rest-zookeeper\",\r\n     \"type\": \"KfkQ\",\r\n     \"zkNamespace\": \"a1\"\r\n}"
		},
		{
			"id": "6b418354-d3f1-c28a-0a82-5714964a456d",
			"headers": "",
			"url": "{{address}}/v1/services",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'zkProvider' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1489390665893,
			"name": "Service_5.1.8.Empty_zk-provider",
			"description": "",
			"collectionId": "7176e505-2c63-713f-32f3-43f95b30fb48",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"rest-kafka1\",\r\n     \"description\": \"example kafka provider\",\r\n     \"provider\": \"kafka-rest\",\r\n     \"zkProvider\": \"\",\r\n     \"type\": \"KfkQ\",\r\n     \"zkNamespace\": \"a1\"\r\n}"
		},
		{
			"id": "6d9382f7-567c-402a-93ff-c5a201eff21a",
			"headers": "",
			"url": "{{address}}/v1/providers/rest-zookeeper",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Body matches string\"] = responseBody.has(\"Provider 'rest-zookeeper' has been deleted\" );",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1492487758416,
			"name": "Provider_5.4.1.Delete",
			"description": "",
			"collectionId": "7176e505-2c63-713f-32f3-43f95b30fb48",
			"responses": [],
			"rawModeData": ""
		},
		{
			"id": "74345d6a-239e-0e16-c292-7937c23fd34a",
			"headers": "",
			"url": "{{address}}/v1/services/rest-kafka111",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "GET",
			"collectionId": "7176e505-2c63-713f-32f3-43f95b30fb48",
			"data": [],
			"dataMode": "raw",
			"name": "Service_5.2.4.Get_not_found",
			"description": "",
			"descriptionFormat": "html",
			"time": 1479870860658,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 404\"] = responseCode.code === 404;\n\ntests[\"Body matches string\"] = responseBody.has(\"Service 'rest-kafka111' has not been found.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n     \"name\": \"rest-kafka\",\r\n     \"description\": \"example kafka provider\",\r\n     \"provider\": \"kafka-rest\",\r\n     \"zk-provider\": \"rest-zookeeper\",\r\n     \"type\": \"KfkQ\",\r\n     \"zk-namespace\": \"a1\"\r\n}"
		},
		{
			"id": "82d36cc2-fc2b-f302-2840-74f1b91f50f1",
			"headers": "",
			"url": "{{address}}/v1/services",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Type' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1489390459494,
			"name": "Service_5.1.19.Empty_type(empty_string)",
			"description": "",
			"collectionId": "7176e505-2c63-713f-32f3-43f95b30fb48",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"rest-kafka1\",\r\n     \"description\": \"example kafka provider\",\r\n     \"provider\": \"kafka-rest\",\r\n     \"zkProvider\": \"rest-zookeeper\",\r\n\r\n     \"zkNamespace\": \"a1\"\r\n}"
		},
		{
			"id": "884ae950-2e0f-cad9-5dbf-c0b2db2b9996",
			"headers": "",
			"url": "{{address}}/v1/providers/rest-jdbc",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "DELETE",
			"collectionId": "7176e505-2c63-713f-32f3-43f95b30fb48",
			"data": [],
			"dataMode": "raw",
			"name": "Provider_7.4.1.Delete(Wrong_zKprovider)",
			"description": "",
			"descriptionFormat": "html",
			"time": 1493179095746,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Body matches string\"] = responseBody.has(\"Provider 'rest-jdbc' has been deleted\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": ""
		},
		{
			"id": "8d908d58-79b7-21e2-f1b2-6070d1052f3c",
			"headers": "",
			"url": "{{address}}/v1/services",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Type' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1489390505054,
			"name": "Service_5.1.9.Empty_type",
			"description": "",
			"collectionId": "7176e505-2c63-713f-32f3-43f95b30fb48",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"rest-kafka1\",\r\n     \"description\": \"example kafka provider\",\r\n     \"provider\": \"kafka-rest\",\r\n     \"zkProvider\": \"rest-zookeeper\",\r\n     \"type\": \"\",\r\n     \"zkNamespace\": \"a1\"\r\n}"
		},
		{
			"id": "9b57f05a-58e7-a359-9ce4-09c22806eb35",
			"headers": "",
			"url": "{{address}}/v1/services/rest-kafka/",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Body matches string\"] = responseBody.has(\"rest-kafka\");\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1495417763956,
			"name": "Service_5.2.1.Get_by_name",
			"description": "",
			"collectionId": "7176e505-2c63-713f-32f3-43f95b30fb48",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"rest-kafka1\",\r\n     \"description\": \"example kafka provider\",\r\n     \"provider\": \"aerospike_test_provider\",\r\n     \"zk-provider\": \"rest-zookeeper\",\r\n     \"type\": \"KfkQ\",\r\n     \"zk-namespace\": \"a1\"\r\n}"
		},
		{
			"id": "9b9e0911-7218-bfe1-1da9-aab14e47dd9d",
			"headers": "",
			"url": "{{address}}/v1/providers/kafka-rest/related",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Body matches string\"] = responseBody.has(\"kafka-rest\");\n\ntests[\"Body matches string\"] = responseBody.has(\"services\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1495420595899,
			"name": "Provider_4.2.5.Related",
			"description": "",
			"collectionId": "7176e505-2c63-713f-32f3-43f95b30fb48",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"rest-kafka1\",\r\n     \"description\": \"example kafka provider\",\r\n     \"provider\": \"aerospike_test_provider\",\r\n     \"zk-provider\": \"rest-zookeeper\",\r\n     \"type\": \"KfkQ\",\r\n     \"zk-namespace\": \"a1\"\r\n}"
		},
		{
			"id": "9dce1682-512d-7d13-7ce1-ca3c05be1877",
			"headers": "",
			"url": "{{address}}/v1/providers/kafka-rest",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 422\"] = responseCode.code === 422;\n\ntests[\"Body matches string\"] = responseBody.has(\"Cannot delete provider 'kafka-rest'. Provider is used in services.\" );",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493182450340,
			"name": "Provider_4.4.2.Delete_provider_used_in_service",
			"description": "",
			"collectionId": "7176e505-2c63-713f-32f3-43f95b30fb48",
			"responses": [],
			"rawModeData": ""
		},
		{
			"id": "9fae2eff-dff9-471c-6882-2017b91385d7",
			"headers": "",
			"url": "{{address}}/v1/services",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\" 'Provider' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1489390581069,
			"name": "Service_5.1.6.Empty_provider",
			"description": "",
			"collectionId": "7176e505-2c63-713f-32f3-43f95b30fb48",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"rest-kafka1\",\r\n     \"description\": \"example kafka provider\",\r\n     \"provider\": \"\",\r\n     \"zkProvider\": \"rest-zookeeper\",\r\n     \"type\": \"KfkQ\",\r\n     \"zkNamespace\": \"a1\"\r\n}"
		},
		{
			"id": "a59add6c-ee16-756f-2a47-7b7d349b2a91",
			"headers": "",
			"url": "{{address}}/v1/services",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "7176e505-2c63-713f-32f3-43f95b30fb48",
			"data": [],
			"dataMode": "raw",
			"name": "Service_5.1.23.Wrong_JSON",
			"description": "",
			"descriptionFormat": "html",
			"time": 1495080049279,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Cannot parse json:\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n     \"type\": \"\",\r\n     \"description\": \"\",\r\n     \"namespace\": \"\"\r\n     \"provider\": \"\"\r\n}"
		},
		{
			"id": "baa1ec2f-3ec6-8538-d98f-95c5cd91ab5b",
			"headers": "",
			"url": "{{address}}/v1/services",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'zkNamespace' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1489390609941,
			"name": "Service_5.1.7.Empty_zk-namespace",
			"description": "",
			"collectionId": "7176e505-2c63-713f-32f3-43f95b30fb48",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"rest-kafka1\",\r\n     \"description\": \"example kafka provider\",\r\n     \"provider\": \"kafka-rest\",\r\n     \"zkProvider\": \"rest-zookeeper\",\r\n     \"type\": \"KfkQ\",\r\n     \"zkNamespace\": \"\"\r\n} "
		},
		{
			"id": "c2d0aa01-3bed-f6eb-10cd-e0f1dfcc7ed0",
			"headers": "",
			"url": "{{address}}/v1/services",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\ntests[\"Body matches string\"] = responseBody.has(\"Service 'rest-kafka' has been created.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493179199889,
			"name": "Service_5.1.1.Correct_data",
			"description": "",
			"collectionId": "7176e505-2c63-713f-32f3-43f95b30fb48",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"rest-kafka\",\r\n     \"description\": \"example kafka provider\",\r\n     \"provider\": \"kafka-rest\",\r\n     \"zkProvider\": \"rest-zookeeper\",\r\n     \"type\": \"KfkQ\",\r\n     \"zkNamespace\": \"a1\"\r\n}"
		},
		{
			"id": "cb585618-021a-10d6-01e3-13a8c279e8d4",
			"headers": "",
			"url": "{{address}}/v1/providers",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "7176e505-2c63-713f-32f3-43f95b30fb48",
			"data": [],
			"dataMode": "raw",
			"name": "Provider_5.1.1.Correct_data",
			"description": "",
			"descriptionFormat": "html",
			"time": 1493177727569,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\ntests[\"Body matches string\"] = responseBody.has(\"Provider 'rest-zookeeper' has been created.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n     \"name\": \"rest-zookeeper\",\r\n     \"description\": \"example zooKeeper provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"zookeeper\",\r\n     \"hosts\": [\r\n        \"176.120.25.19:2181\"\r\n      ]\r\n}"
		},
		{
			"id": "da67a017-fa38-63b4-0897-4c40f6131495",
			"headers": "",
			"url": "{{address}}/v1/services",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Name' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1489390342247,
			"name": "Service_5.1.5.Empty_name",
			"description": "",
			"collectionId": "7176e505-2c63-713f-32f3-43f95b30fb48",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"\",\r\n     \"description\": \"example kafka provider\",\r\n     \"provider\": \"kafka-rest\",\r\n     \"zkProvider\": \"rest-zookeeper\",\r\n     \"type\": \"KfkQ\",\r\n     \"zkNamespace\": \"a1\"\r\n}"
		},
		{
			"id": "e96dec22-2662-ed9b-a16f-0648ea271d6b",
			"headers": "",
			"url": "{{address}}/v1/services/rest-kafka",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 404;\n\ntests[\"Body matches string\"] = responseBody.has(\"Service 'rest-kafka' has not been found.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484625500175,
			"name": "Service_5.2.6.Get_deleted_service",
			"description": "",
			"collectionId": "7176e505-2c63-713f-32f3-43f95b30fb48",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"rest-kafka1\",\r\n     \"description\": \"example kafka provider\",\r\n     \"provider\": \"aerospike_test_provider\",\r\n     \"zk-provider\": \"rest-zookeeper\",\r\n     \"type\": \"KfkQ\",\r\n     \"zk-namespace\": \"a1\"\r\n}"
		},
		{
			"id": "f38a018c-50e5-c29d-000d-2df1d736b82a",
			"headers": "",
			"url": "{{address}}/v1/providers",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\ntests[\"Body matches string\"] = responseBody.has(\"Provider 'rest-jdbc' has been created.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493866252215,
			"name": "Provider_7.1.1.Correct_data(Wrong_zKprovider)",
			"description": "",
			"collectionId": "7176e505-2c63-713f-32f3-43f95b30fb48",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"rest-jdbc\",\r\n     \"description\": \"example jdbc provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"JDBC\",\r\n     \"driver\":\"mysql\",\r\n     \"hosts\": [\r\n        \"192.168.1.225:5432\"\r\n      ]\r\n}"
		},
		{
			"id": "f5c0cb84-f424-0bca-5afd-bfc6238e2dc9",
			"headers": "",
			"url": "{{address}}/v1/services",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\" 'Provider' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1489390567622,
			"name": "Service_5.1.20.Empty_provider(empty_string)",
			"description": "",
			"collectionId": "7176e505-2c63-713f-32f3-43f95b30fb48",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"rest-kafka1\",\r\n     \"description\": \"example kafka provider\",\r\n     \r\n     \"zkProvider\": \"rest-zookeeper\",\r\n     \"type\": \"KfkQ\",\r\n     \"zkNamespace\": \"a1\"\r\n}"
		},
		{
			"id": "fa6189a7-3dbc-ce13-1b98-45529dcc8670",
			"headers": "",
			"url": "{{address}}/v1/services",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Zookeeper provider 'rest-zookeeper1111' does not exist.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1489390680068,
			"name": "Service_5.1.13.Zk-provider_doesn't_exists",
			"description": "",
			"collectionId": "7176e505-2c63-713f-32f3-43f95b30fb48",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"rest-kafka1\",\r\n     \"description\": \"example kafka provider\",\r\n     \"provider\": \"kafka-rest\",\r\n     \"zkProvider\": \"rest-zookeeper1111\",\r\n     \"type\": \"KfkQ\",\r\n     \"zkNamespace\": \"a1\"\r\n}"
		},
		{
			"id": "fde65e90-01e4-af5f-0da9-6f3965d7b1ad",
			"headers": "",
			"url": "{{address}}/v1/providers/kafka-rest",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Body matches string\"] = responseBody.has(\"Provider 'kafka-rest' has been deleted\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493182483563,
			"name": "Provider_4.4.1.Delete",
			"description": "",
			"collectionId": "7176e505-2c63-713f-32f3-43f95b30fb48",
			"responses": [],
			"rawModeData": ""
		}
	]
}