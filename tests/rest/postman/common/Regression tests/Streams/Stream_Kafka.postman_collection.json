{
	"id": "bf0d2deb-f963-06d5-e6b5-0fb2d8667930",
	"name": "Kafka Stream",
	"description": "",
	"order": [
		"6db197df-02c6-0a53-8263-4a5532d60aa0",
		"b685c218-9a64-b059-3d58-7d77666b9172",
		"4008b72f-ad6f-a1b7-f0fd-ec4ba14c9d73",
		"d40bbe17-c965-c51a-0c89-06cdcf813262",
		"7424ce46-347b-789e-05ea-d85efe7fdf1f",
		"5f9e859e-9b09-cb87-522f-7f2f364c7819",
		"44a98729-d847-d205-5255-c81d62d65f6d",
		"ec298ca7-9c8b-5cda-3686-cdaea2151411",
		"35804493-d150-3f9b-e194-d881085f230d",
		"c6da5dbd-41b6-4d91-ac1b-a4c69550f8ac",
		"24cc53e5-2044-e730-8e4b-84daef07a1cf",
		"46a11b51-34d0-22b7-c43b-65a5dea12cbf",
		"f9e4a1aa-99b9-10d2-f351-6b98546ef919",
		"41482a2a-ce97-2514-4467-1fb4981fb09d",
		"2ea17a5e-fb68-aa56-bc84-d626e735f995",
		"b6aecf80-dd06-340a-446d-fb9856aef9a4",
		"54a7b308-67c3-a60b-ad84-567ac5dc4175",
		"6bed66e7-6fab-f94c-609f-adf3ea305104",
		"a23e02ef-7dc5-eadc-04b5-90e11224b710",
		"a064030e-eb04-0c07-e06f-dbce79b564de",
		"d54359e5-61a3-4a7d-f104-e04a8cda32c0",
		"3a6f7b2d-ed2f-93e9-1111-8eb614b5648c",
		"0286baee-1581-b16b-f97a-cc755f9dfef7",
		"c6188030-a8a1-b0a3-5536-4de5d5918e9d",
		"ea71b10a-5d6d-7726-3a3e-a3c0cd9df706",
		"64bcc216-aac7-0856-16ec-3e488b4a4f0d",
		"812813fc-16f5-cab4-7b10-94515ac199d9",
		"0b8321ed-5803-74b9-fc1a-d3c0937c2876",
		"d325fced-da8d-3f63-e066-5e17749dd05a",
		"c28c7603-5947-7e3b-268f-5f0d2089ab40",
		"9f5d323b-9846-8be8-723d-41eeb3d45c65",
		"17d7f36a-e1a4-db1c-326a-328552c9d04e",
		"9ef21cf3-6a13-5301-04e7-8d8f3c8c528d",
		"0297b953-1011-c313-ed0a-8ce6edc157e4",
		"276dd7da-c9b0-8689-7a1f-cdadab3cf4db",
		"b27bd40b-455d-299e-5492-2e2ef4e5dd3f",
		"afbe571d-8b9a-0907-8306-e74189b856ff",
		"e4dbde44-0348-0b7b-17d0-bdb831e62d61",
		"c4637fe0-8fd2-8393-da05-20de1b23a0c4",
		"39956e38-9287-a729-71db-3f0482e63c69",
		"0b9d89f6-3b46-1182-ca6c-e54fa5018f93",
		"33537ec3-d7b2-353f-61a3-3924974373b0",
		"1671ed0f-4d00-cd85-745f-c5b65487c3b9"
	],
	"folders": [],
	"timestamp": 1480309092757,
	"owner": 0,
	"public": false,
	"requests": [
		{
			"id": "0286baee-1581-b16b-f97a-cc755f9dfef7",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "bf0d2deb-f963-06d5-e6b5-0fb2d8667930",
			"data": [],
			"dataMode": "raw",
			"name": "Stream_3.1.17.Negative_value_in_replication factor",
			"description": "",
			"descriptionFormat": "html",
			"time": 1482376413038,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'replicationFactor' must be a positive integer.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n      \"type\": \"stream.kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": 1,\r\n      \"service\": \"rest-kafka\",\r\n      \"force\": false,\r\n      \"replicationFactor\": -5\r\n}\r\n\r\n"
		},
		{
			"id": "0297b953-1011-c313-ed0a-8ce6edc157e4",
			"headers": "",
			"url": "{{address}}/v1/providers/rest-zookeeper",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 422\"] = responseCode.code === 422;\n\ntests[\"Body matches string\"] = responseBody.has(\"Cannot delete provider 'rest-zookeeper'. Provider is used in services\" );",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1492585162279,
			"name": "Provider_5.4.2.Delete_provider_used_in_service",
			"description": "",
			"collectionId": "bf0d2deb-f963-06d5-e6b5-0fb2d8667930",
			"responses": [],
			"rawModeData": ""
		},
		{
			"id": "0b8321ed-5803-74b9-fc1a-d3c0937c2876",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "bf0d2deb-f963-06d5-e6b5-0fb2d8667930",
			"data": [],
			"dataMode": "raw",
			"name": "Stream_3.1.24.Wrong_JSON",
			"description": "",
			"descriptionFormat": "html",
			"time": 1495157688480,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Cannot parse json:\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n      \"type\": \"stream.t-stream\",\r\n      \"name\": \"rest-tstream\",\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": 1,\r\n      \"service\": \"rest-tstream\"\r\n      \"force\": false\r\n}"
		},
		{
			"id": "0b9d89f6-3b46-1182-ca6c-e54fa5018f93",
			"headers": "",
			"url": "{{address}}/v1/services/rest-kafka",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "DELETE",
			"collectionId": "bf0d2deb-f963-06d5-e6b5-0fb2d8667930",
			"data": [],
			"dataMode": "raw",
			"name": "Service_5.3.1.Delete",
			"description": "",
			"descriptionFormat": "html",
			"time": 1491295349361,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Body matches string\"] = responseBody.has(\"Service 'rest-kafka' has been deleted\");",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"rawModeData": "",
			"isFromCollection": true
		},
		{
			"id": "1671ed0f-4d00-cd85-745f-c5b65487c3b9",
			"headers": "",
			"url": "{{address}}/v1/providers/kafka-example",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "DELETE",
			"collectionId": "bf0d2deb-f963-06d5-e6b5-0fb2d8667930",
			"data": [],
			"dataMode": "raw",
			"name": "Provider_4.4.1.Delete",
			"description": "",
			"descriptionFormat": "html",
			"time": 1492490207692,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Body matches string\"] = responseBody.has(\"Provider 'kafka-example' has been deleted\");",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"rawModeData": "{\r\n     \"name\": \"kafka-example\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"kafka\",\r\n     \"hosts\": [\r\n        \"1111\"\r\n      ]\r\n}",
			"isFromCollection": true
		},
		{
			"id": "17d7f36a-e1a4-db1c-326a-328552c9d04e",
			"headers": "",
			"url": "{{address}}/v1/streams/rest-kafka",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\n\n\ntests[\"Body matches string\"] = responseBody.has(\"rest-kafka\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1482291587684,
			"name": "Stream_3.2.1.Get_by_name",
			"description": "",
			"collectionId": "bf0d2deb-f963-06d5-e6b5-0fb2d8667930",
			"responses": []
		},
		{
			"id": "24cc53e5-2044-e730-8e4b-84daef07a1cf",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Service' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484796051133,
			"name": "Stream_3.1.8.Empty_service",
			"description": "",
			"collectionId": "bf0d2deb-f963-06d5-e6b5-0fb2d8667930",
			"responses": [],
			"rawModeData": "{\n      \"type\": \"stream.kafka\",\n      \"name\": \"rest-kafka\",\n      \"description\": \"Tstream example\",\n      \"partitions\": 1,\n      \"service\": \"\",\n      \"force\": false,\n      \"replicationFactor\": 1\n}\n\n"
		},
		{
			"id": "276dd7da-c9b0-8689-7a1f-cdadab3cf4db",
			"headers": "",
			"url": "{{address}}/v1/providers/kafka-example",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 422\"] = responseCode.code === 422;\n\ntests[\"Body matches string\"] = responseBody.has(\"Cannot delete provider 'kafka-example'. Provider is used in services.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493269175296,
			"name": "Provider_4.4.2.Delete_provider_used_in_service",
			"description": "",
			"collectionId": "bf0d2deb-f963-06d5-e6b5-0fb2d8667930",
			"responses": [],
			"rawModeData": ""
		},
		{
			"id": "2ea17a5e-fb68-aa56-bc84-d626e735f995",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Service for 'stream.kafka' stream' must be of type: 'service.apache-kafka' ('service.t-streams' is given instead).\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493268998737,
			"name": "Stream_3.1.15.Wrong_service",
			"description": "",
			"collectionId": "bf0d2deb-f963-06d5-e6b5-0fb2d8667930",
			"responses": [],
			"rawModeData": "{\n      \"type\": \"stream.kafka\",\n      \"name\": \"rest-kafka\",\n      \"description\": \"Tstream example\",\n      \"partitions\": 1,\n      \"service\": \"tstr-for-output-stream\",\n      \"force\": false,\n      \"replicationFactor\": 1\n}\n\n"
		},
		{
			"id": "33537ec3-d7b2-353f-61a3-3924974373b0",
			"headers": "",
			"url": "{{address}}/v1/providers/rest-zookeeper",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "DELETE",
			"collectionId": "bf0d2deb-f963-06d5-e6b5-0fb2d8667930",
			"data": [],
			"dataMode": "raw",
			"name": "Provider_5.4.1.Delete",
			"description": "",
			"descriptionFormat": "html",
			"time": 1491295355745,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Body matches string\"] = responseBody.has(\"Provider 'rest-zookeeper' has been deleted\" );",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"rawModeData": ""
		},
		{
			"id": "35804493-d150-3f9b-e194-d881085f230d",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Unknown type '111stream.kafka' of stream provided. Must be one of: [stream.t-stream, stream.kafka, jdbc-output, elasticsearch-output, stream.restful]\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493265491371,
			"name": "Stream_3.1.13.Wrong_type",
			"description": "",
			"collectionId": "bf0d2deb-f963-06d5-e6b5-0fb2d8667930",
			"responses": [],
			"rawModeData": "{\n      \"type\": \"111stream.kafka\",\n      \"name\": \"rest-kafka\",\n      \"description\": \"Tstream example\",\n      \"partitions\": 1,\n      \"service\": \"rest-kafka\",\n      \"force\": false,\n      \"replicationFactor\": 1\n}\n\n"
		},
		{
			"id": "39956e38-9287-a729-71db-3f0482e63c69",
			"headers": "",
			"url": "{{address}}/v1/streams/rest-kafka",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 404\"] = responseCode.code === 404;\n\n\n\ntests[\"Body matches string\"] = responseBody.has(\"Stream 'rest-kafka' has not been found.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493269228439,
			"name": "Stream_3.3.4.Delete_not_found",
			"description": "",
			"collectionId": "bf0d2deb-f963-06d5-e6b5-0fb2d8667930",
			"responses": [],
			"rawModeData": ""
		},
		{
			"id": "3a6f7b2d-ed2f-93e9-1111-8eb614b5648c",
			"headers": "",
			"headerData": [],
			"url": "{{address}}/v1/streams",
			"queryParams": [],
			"preRequestScript": null,
			"pathVariables": {},
			"pathVariableData": [],
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Json contains incorrect value in property\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1498016694681,
			"name": "Stream_3.1.6.Replication_factor_string",
			"description": "",
			"collectionId": "bf0d2deb-f963-06d5-e6b5-0fb2d8667930",
			"responses": [],
			"rawModeData": "{\r\n      \"type\": \"stream.kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": 1,\r\n      \"service\": \"rest-kafka\",\r\n      \"force\": false,\r\n      \"replicationFactor\": \"a\"\r\n}\r\n\r\n"
		},
		{
			"id": "4008b72f-ad6f-a1b7-f0fd-ec4ba14c9d73",
			"headers": "",
			"url": "{{address}}/v1/services",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\ntests[\"Body matches string\"] = responseBody.has(\"Service 'rest-kafka' has been created.\");",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1492490412175,
			"name": "Service_5.1.1.Correct_data",
			"description": "",
			"collectionId": "bf0d2deb-f963-06d5-e6b5-0fb2d8667930",
			"responses": [],
			"rawModeData": "{\r\n     \"name\": \"rest-kafka\",\r\n     \"description\": \"example kafka provider\",\r\n     \"provider\": \"kafka-example\",\r\n     \"zkProvider\": \"rest-zookeeper\",\r\n     \"type\": \"service.apache-kafka\",\r\n     \"zkNamespace\": \"a1\"\r\n}",
			"isFromCollection": true
		},
		{
			"id": "41482a2a-ce97-2514-4467-1fb4981fb09d",
			"headers": "",
			"url": "{{address}}/v1/services",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "bf0d2deb-f963-06d5-e6b5-0fb2d8667930",
			"data": [],
			"dataMode": "raw",
			"name": "Service_6.1.1.Correct_data(Wrong_service)",
			"description": "",
			"descriptionFormat": "html",
			"time": 1493268911194,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\ntests[\"Body matches string\"] = responseBody.has(\"Service 'tstr-for-output-stream' has been created.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n     \"type\": \"service.t-streams\",\r\n     \"name\": \"tstr-for-output-stream\",\r\n     \"description\": \"tstream\",\r\n     \"provider\": \"zookeeper-for-tstr-serv\",\r\n     \"prefix\": \"/path\",\r\n     \"token\": \"12345678910111213141516171819202\"\r\n}"
		},
		{
			"id": "44a98729-d847-d205-5255-c81d62d65f6d",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Type' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484809887763,
			"name": "Stream_3.1.19.Empty_type(empty_string)",
			"description": "",
			"collectionId": "bf0d2deb-f963-06d5-e6b5-0fb2d8667930",
			"responses": [],
			"rawModeData": "{\n\n      \"name\": \"rest-kafka\",\n      \"description\": \"Tstream example\",\n      \"partitions\": 1,\n      \"service\": \"rest-kafka\",\n      \"force\": false,\n      \"replicationFactor\": 1\n}\n\n"
		},
		{
			"id": "46a11b51-34d0-22b7-c43b-65a5dea12cbf",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Service '111rest-kafka' does not exist.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484809939484,
			"name": "Stream_3.1.14.Service_doesn't_exists",
			"description": "",
			"collectionId": "bf0d2deb-f963-06d5-e6b5-0fb2d8667930",
			"responses": [],
			"rawModeData": "{\n      \"type\": \"stream.kafka\",\n      \"name\": \"rest-kafka\",\n      \"description\": \"Tstream example\",\n      \"partitions\": 1,\n      \"service\": \"111rest-kafka\",\n      \"force\": false,\n      \"replicationFactor\": 1\n}\n\n"
		},
		{
			"id": "54a7b308-67c3-a60b-ad84-567ac5dc4175",
			"headers": "",
			"url": "{{address}}/v1/providers/zookeeper-for-tstr-serv",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "DELETE",
			"collectionId": "bf0d2deb-f963-06d5-e6b5-0fb2d8667930",
			"data": [],
			"dataMode": "raw",
			"name": "Provider_5.4.1.Delete(Wrong_service)",
			"description": "",
			"descriptionFormat": "html",
			"time": 1493268941074,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Body matches string\"] = responseBody.has(\"Provider 'zookeeper-for-tstr-serv' has been deleted\" );",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": ""
		},
		{
			"id": "5f9e859e-9b09-cb87-522f-7f2f364c7819",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Stream has incorrect name: '1rest-kafka'. Name of stream must contain digits, lowercase letters or hyphens. First symbol must be a letter.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1482376496933,
			"name": "Stream_3.1.2.Wrong_name",
			"description": "",
			"collectionId": "bf0d2deb-f963-06d5-e6b5-0fb2d8667930",
			"responses": [],
			"rawModeData": "{\n      \"type\": \"stream.kafka\",\n      \"name\": \"1rest-kafka\",\n      \"description\": \"Tstream example\",\n      \"partitions\": 1,\n      \"service\": \"rest-kafka\",\n      \"force\": false,\n      \"replicationFactor\": 1\n}\n\n"
		},
		{
			"id": "64bcc216-aac7-0856-16ec-3e488b4a4f0d",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Partitions' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484796057133,
			"name": "Stream_3.1.21.Empty_partitions(empty_string)",
			"description": "",
			"collectionId": "bf0d2deb-f963-06d5-e6b5-0fb2d8667930",
			"responses": [],
			"rawModeData": "{\r\n      \"type\": \"stream.kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n\r\n      \"service\": \"rest-kafka\",\r\n      \"force\": false,\r\n      \"replicationFactor\": 1\r\n}\r\n\r\n"
		},
		{
			"id": "6bed66e7-6fab-f94c-609f-adf3ea305104",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Partitions' must be a positive integer.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1495161705740,
			"name": "Stream_3.1.4.Wrong_partitions",
			"description": "",
			"collectionId": "bf0d2deb-f963-06d5-e6b5-0fb2d8667930",
			"responses": [],
			"rawModeData": "{\r\n      \"type\": \"stream.kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": 0,\r\n      \"service\": \"rest-kafka\",\r\n      \"force\": false,\r\n      \"replicationFactor\": 1\r\n}\r\n\r\n"
		},
		{
			"id": "6db197df-02c6-0a53-8263-4a5532d60aa0",
			"headers": "",
			"url": "{{address}}/v1/providers",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "bf0d2deb-f963-06d5-e6b5-0fb2d8667930",
			"data": [],
			"dataMode": "raw",
			"name": "Provider_5.1.1.Correct_data",
			"description": "",
			"descriptionFormat": "html",
			"time": 1491295197332,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\ntests[\"Body matches string\"] = responseBody.has(\"Provider 'rest-zookeeper' has been created.\");",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"rawModeData": "{\r\n     \"name\": \"rest-zookeeper\",\r\n     \"description\": \"example zooKeeper provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"zookeeper\",\r\n     \"hosts\": [\r\n        \"176.120.25.19:2181\"\r\n      ]\r\n}",
			"isFromCollection": true
		},
		{
			"id": "7424ce46-347b-789e-05ea-d85efe7fdf1f",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\" 'Name' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484796034294,
			"name": "Stream_3.1.7.Empty_name",
			"description": "",
			"collectionId": "bf0d2deb-f963-06d5-e6b5-0fb2d8667930",
			"responses": [],
			"rawModeData": "{\r\n      \"type\": \"stream.kafka\",\r\n      \"name\": \"\",\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": 1,\r\n      \"service\": \"rest-kafka\",\r\n      \"force\": false,\r\n      \"replicationFactor\": 1\r\n}\r\n"
		},
		{
			"id": "812813fc-16f5-cab4-7b10-94515ac199d9",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'replicationFactor' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493269063217,
			"name": "Stream_3.1.22.Empty_replication_factor(empty_string)",
			"description": "",
			"collectionId": "bf0d2deb-f963-06d5-e6b5-0fb2d8667930",
			"responses": [],
			"rawModeData": "{\r\n      \"type\": \"stream.kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": 1,\r\n      \"service\": \"rest-kafka\",\r\n      \"force\": false\r\n\r\n}\r\n\r\n"
		},
		{
			"id": "9ef21cf3-6a13-5301-04e7-8d8f3c8c528d",
			"headers": "",
			"url": "{{address}}/v1/streams/rest-kafka111",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 404\"] = responseCode.code === 404;\n\n\n\ntests[\"Body matches string\"] = responseBody.has(\"Stream 'rest-kafka111' has not been found.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1483934172034,
			"name": "Stream_3.2.5.Get_not_found",
			"description": "",
			"collectionId": "bf0d2deb-f963-06d5-e6b5-0fb2d8667930",
			"responses": []
		},
		{
			"id": "9f5d323b-9846-8be8-723d-41eeb3d45c65",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "bf0d2deb-f963-06d5-e6b5-0fb2d8667930",
			"data": [],
			"dataMode": "raw",
			"name": "Stream_3.1.3.Already_exists",
			"description": "",
			"descriptionFormat": "html",
			"time": 1480316203828,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\" Stream with name 'rest-kafka' already exists.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\n      \"type\": \"stream.kafka\",\n      \"name\": \"rest-kafka\",\n      \"description\": \"Tstream example\",\n      \"partitions\": 1,\n      \"service\": \"rest-kafka\",\n      \"force\": false,\n      \"replicationFactor\": 1\n}\n\n"
		},
		{
			"id": "a064030e-eb04-0c07-e06f-dbce79b564de",
			"headers": "",
			"headerData": [],
			"url": "{{address}}/v1/streams",
			"queryParams": [],
			"preRequestScript": null,
			"pathVariables": {},
			"pathVariableData": [],
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Json contains incorrect value in property\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1498017088559,
			"name": "Stream_3.1.23.Partitions_string",
			"description": "",
			"collectionId": "bf0d2deb-f963-06d5-e6b5-0fb2d8667930",
			"responses": [],
			"rawModeData": "{\r\n      \"type\": \"stream.kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": \"а\",\r\n      \"service\": \"rest-kafka\",\r\n      \"force\": false,\r\n      \"replicationFactor\": 1\r\n}\r\n\r\n"
		},
		{
			"id": "a23e02ef-7dc5-eadc-04b5-90e11224b710",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Partitions' must be a positive integer.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1482376441374,
			"name": "Stream_3.1.16.Negative_value_in_partitions",
			"description": "",
			"collectionId": "bf0d2deb-f963-06d5-e6b5-0fb2d8667930",
			"responses": [],
			"rawModeData": "{\r\n      \"type\": \"stream.kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": -5,\r\n      \"service\": \"rest-kafka\",\r\n      \"force\": false,\r\n      \"replicationFactor\": 1\r\n}\r\n\r\n"
		},
		{
			"id": "afbe571d-8b9a-0907-8306-e74189b856ff",
			"headers": "",
			"url": "{{address}}/v1/services/rest-kafka/related",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Body matches string\"] = responseBody.has(\"rest-kafka\");\n\ntests[\"Body matches string\"] = responseBody.has(\"streams\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1495421369488,
			"name": "Service_5.2.6.Related",
			"description": "",
			"collectionId": "bf0d2deb-f963-06d5-e6b5-0fb2d8667930",
			"responses": []
		},
		{
			"id": "b27bd40b-455d-299e-5492-2e2ef4e5dd3f",
			"headers": "",
			"url": "{{address}}/v1/services/rest-kafka",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 422\"] = responseCode.code === 422;\n\ntests[\"Body matches string\"] = responseBody.has(\"Cannot delete service 'rest-kafka'. Service is used in streams.\");",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1492585185616,
			"name": "Service_5.3.2.Delete_service_used_in_streams",
			"description": "",
			"collectionId": "bf0d2deb-f963-06d5-e6b5-0fb2d8667930",
			"responses": [],
			"rawModeData": ""
		},
		{
			"id": "b685c218-9a64-b059-3d58-7d77666b9172",
			"headers": "",
			"url": "{{address}}/v1/providers",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "bf0d2deb-f963-06d5-e6b5-0fb2d8667930",
			"data": [],
			"dataMode": "raw",
			"name": "Provider_4.1.1.Correct_data",
			"description": "",
			"descriptionFormat": "html",
			"time": 1492490180908,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\ntests[\"Body matches string\"] = responseBody.has(\"Provider 'kafka-example' has been created.\");",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"rawModeData": "{\r\n     \"name\": \"kafka-example\",\r\n     \"description\": \"example kafka provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"kafka\",\r\n     \"hosts\": [\r\n        \"176.120.25.19:9092\"\r\n      ]\r\n}",
			"isFromCollection": true
		},
		{
			"id": "b6aecf80-dd06-340a-446d-fb9856aef9a4",
			"headers": "",
			"url": "{{address}}/v1/services/tstr-for-output-stream",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "DELETE",
			"collectionId": "bf0d2deb-f963-06d5-e6b5-0fb2d8667930",
			"data": [],
			"dataMode": "raw",
			"name": "Service_6.3.1.Delete(Wrong_service)",
			"description": "",
			"descriptionFormat": "html",
			"time": 1493268922538,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Body matches string\"] = responseBody.has(\"Service 'tstr-for-output-stream' has been deleted\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": ""
		},
		{
			"id": "c28c7603-5947-7e3b-268f-5f0d2089ab40",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\ntests[\"Body matches string\"] = responseBody.has(\"Stream 'rest-kafka' has been  created.\");",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1492491240409,
			"name": "Stream_2.1.1.Correct_data",
			"description": "",
			"collectionId": "bf0d2deb-f963-06d5-e6b5-0fb2d8667930",
			"responses": [],
			"rawModeData": "{\r\n      \"type\": \"stream.kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": 1,\r\n      \"service\": \"rest-kafka\",\r\n      \"force\": false,\r\n      \"replicationFactor\": 1\r\n}\r\n\r\n",
			"isFromCollection": true
		},
		{
			"id": "c4637fe0-8fd2-8393-da05-20de1b23a0c4",
			"headers": "",
			"url": "{{address}}/v1/streams/rest-kafka",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 404;\n\ntests[\"Body matches string\"] = responseBody.has(\"Stream 'rest-kafka' has not been found.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484626094887,
			"name": "Stream_3.2.6.Get_deleted",
			"description": "",
			"collectionId": "bf0d2deb-f963-06d5-e6b5-0fb2d8667930",
			"responses": []
		},
		{
			"id": "c6188030-a8a1-b0a3-5536-4de5d5918e9d",
			"headers": "",
			"headerData": [],
			"url": "{{address}}/v1/streams",
			"queryParams": [],
			"preRequestScript": null,
			"pathVariables": {},
			"pathVariableData": [],
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Json contains incorrect value in property 'partitions'\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1498025993216,
			"name": "Stream_3.1.23.String_partitions",
			"description": "",
			"collectionId": "bf0d2deb-f963-06d5-e6b5-0fb2d8667930",
			"responses": [],
			"rawModeData": "{\r\n      \"type\": \"stream.kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n\t  \"partitions\": \"a\",\r\n      \"service\": \"rest-kafka\",\r\n      \"force\": false,\r\n      \"replicationFactor\": 1\r\n}"
		},
		{
			"id": "c6da5dbd-41b6-4d91-ac1b-a4c69550f8ac",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Service' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484796047759,
			"name": "Stream_3.1.20.Empty_service(empty_string)",
			"description": "",
			"collectionId": "bf0d2deb-f963-06d5-e6b5-0fb2d8667930",
			"responses": [],
			"rawModeData": "{\n      \"type\": \"stream.kafka\",\n      \"name\": \"rest-kafka\",\n      \"description\": \"Tstream example\",\n      \"partitions\": 1,\n\n      \"force\": false,\n      \"replicationFactor\": 1\n}\n\n"
		},
		{
			"id": "d325fced-da8d-3f63-e066-5e17749dd05a",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "bf0d2deb-f963-06d5-e6b5-0fb2d8667930",
			"data": [],
			"dataMode": "raw",
			"name": "Stream_3.1.25.Empty_JSON",
			"description": "",
			"descriptionFormat": "html",
			"time": 1495157696422,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Json deserialization error: 'Empty JSON'\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": ""
		},
		{
			"id": "d40bbe17-c965-c51a-0c89-06cdcf813262",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\" 'Name' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484796030598,
			"name": "Stream_3.1.18.Empty_name(empty_string)",
			"description": "",
			"collectionId": "bf0d2deb-f963-06d5-e6b5-0fb2d8667930",
			"responses": [],
			"rawModeData": "{\r\n      \"type\": \"stream.kafka\",\r\n\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": 1,\r\n      \"service\": \"rest-kafka\",\r\n      \"force\": false,\r\n      \"replicationFactor\": 1\r\n}\r\n"
		},
		{
			"id": "d54359e5-61a3-4a7d-f104-e04a8cda32c0",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "bf0d2deb-f963-06d5-e6b5-0fb2d8667930",
			"data": [],
			"dataMode": "raw",
			"name": "Stream_3.1.5.Wrong_replication_factor",
			"description": "",
			"descriptionFormat": "html",
			"time": 1480316612725,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'replicationFactor' must be a positive integer.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n      \"type\": \"stream.kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n      \"partitions\": 1,\r\n      \"service\": \"rest-kafka\",\r\n      \"force\": false,\r\n      \"replicationFactor\": 0\r\n}\r\n\r\n"
		},
		{
			"id": "e4dbde44-0348-0b7b-17d0-bdb831e62d61",
			"headers": "",
			"url": "{{address}}/v1/streams/rest-kafka",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\n\n\ntests[\"Body matches string\"] = responseBody.has(\"Stream 'rest-kafka' has been deleted.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1493269185112,
			"name": "Stream_3.3.1.Delete",
			"description": "",
			"collectionId": "bf0d2deb-f963-06d5-e6b5-0fb2d8667930",
			"responses": [],
			"rawModeData": ""
		},
		{
			"id": "ea71b10a-5d6d-7726-3a3e-a3c0cd9df706",
			"headers": "",
			"headerData": [],
			"url": "{{address}}/v1/streams",
			"queryParams": [],
			"preRequestScript": null,
			"pathVariables": {},
			"pathVariableData": [],
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"Json contains incorrect value in property 'partitions'\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1498026121963,
			"name": "Stream_3.1.10.Empty_partitions",
			"description": "",
			"collectionId": "bf0d2deb-f963-06d5-e6b5-0fb2d8667930",
			"responses": [],
			"rawModeData": "{\r\n      \"type\": \"stream.kafka\",\r\n      \"name\": \"rest-kafka\",\r\n      \"description\": \"Tstream example\",\r\n\t  \"partitions\": \"\",\r\n      \"service\": \"rest-kafka\",\r\n      \"force\": false,\r\n      \"replicationFactor\": 1\r\n}"
		},
		{
			"id": "ec298ca7-9c8b-5cda-3686-cdaea2151411",
			"headers": "",
			"url": "{{address}}/v1/streams",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body matches string\"] = responseBody.has(\"'Type' attribute is required.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1484796042950,
			"name": "Stream_3.1.9.Empty_type",
			"description": "",
			"collectionId": "bf0d2deb-f963-06d5-e6b5-0fb2d8667930",
			"responses": [],
			"rawModeData": "{\n      \"type\": \"\",\n      \"name\": \"rest-kafka\",\n      \"description\": \"Tstream example\",\n      \"partitions\": 1,\n      \"service\": \"rest-kafka\",\n      \"force\": false,\n      \"replicationFactor\": 1\n}\n\n"
		},
		{
			"id": "f9e4a1aa-99b9-10d2-f351-6b98546ef919",
			"headers": "",
			"url": "{{address}}/v1/providers",
			"pathVariables": {},
			"preRequestScript": null,
			"method": "POST",
			"collectionId": "bf0d2deb-f963-06d5-e6b5-0fb2d8667930",
			"data": [],
			"dataMode": "raw",
			"name": "Provider_5.1.1.Correct_data(Wrong_service)",
			"description": "",
			"descriptionFormat": "html",
			"time": 1493268896691,
			"version": 2,
			"responses": [],
			"tests": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\ntests[\"Body matches string\"] = responseBody.has(\"Provider 'zookeeper-for-tstr-serv' has been created.\");",
			"currentHelper": "normal",
			"helperAttributes": {},
			"rawModeData": "{\r\n     \"name\": \"zookeeper-for-tstr-serv\",\r\n     \"description\": \"example zooKeeper provider\",\r\n     \"login\": \"my_login\",\r\n     \"password\": \"my_pass\",\r\n     \"type\": \"zookeeper\",\r\n     \"hosts\": [\r\n        \"176.120.25.19:2181\"\r\n      ]\r\n}"
		}
	]
}